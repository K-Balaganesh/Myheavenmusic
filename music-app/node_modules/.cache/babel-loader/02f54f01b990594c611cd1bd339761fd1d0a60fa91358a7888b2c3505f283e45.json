{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\components\\\\Playlist.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Playlist({\n  playlists,\n  addToPlaylist\n}) {\n  _s();\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const handleCreate = () => {\n    if (playlistName.trim()) {\n      addToPlaylist(playlistName);\n      setPlaylistName(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: playlistName,\n        onChange: e => setPlaylistName(e.target.value),\n        placeholder: \"New playlist name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(playlists).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No playlists yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : Object.keys(playlists).map((name, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), \" (\", playlists[name].length, \" songs)\"]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Playlist, \"AJ7wOXmvFpc/8IxnbWFjPUtVqgU=\");\n_c = Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Playlist","playlists","addToPlaylist","_s","playlistName","setPlaylistName","handleCreate","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","Object","keys","length","map","name","idx","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/components/Playlist.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Playlist({ playlists, addToPlaylist }) {\r\n  const [playlistName, setPlaylistName] = useState(\"\");\r\n\r\n  const handleCreate = () => {\r\n    if (playlistName.trim()) {\r\n      addToPlaylist(playlistName);\r\n      setPlaylistName(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"playlist\">\r\n      <h2>Your Playlists</h2>\r\n      <div className=\"playlist-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={playlistName}\r\n          onChange={(e) => setPlaylistName(e.target.value)}\r\n          placeholder=\"New playlist name\"\r\n        />\r\n        <button onClick={handleCreate}>Create</button>\r\n      </div>\r\n      <ul>\r\n        {Object.keys(playlists).length === 0 ? (\r\n          <p>No playlists yet.</p>\r\n        ) : (\r\n          Object.keys(playlists).map((name, idx) => (\r\n            <li key={idx}>\r\n              <strong>{name}</strong> ({playlists[name].length} songs)\r\n            </li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,QAAQA,CAAC;EAAEC,SAAS;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIF,YAAY,CAACG,IAAI,CAAC,CAAC,EAAE;MACvBL,aAAa,CAACE,YAAY,CAAC;MAC3BC,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBd,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BV,OAAA;QACEe,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEX,YAAa;QACpBY,QAAQ,EAAGC,CAAC,IAAKZ,eAAe,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACjDI,WAAW,EAAC;MAAmB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFd,OAAA;QAAQqB,OAAO,EAAEd,YAAa;QAAAG,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACNd,OAAA;MAAAU,QAAA,EACGY,MAAM,CAACC,IAAI,CAACrB,SAAS,CAAC,CAACsB,MAAM,KAAK,CAAC,gBAClCxB,OAAA;QAAAU,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAExBQ,MAAM,CAACC,IAAI,CAACrB,SAAS,CAAC,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACnC3B,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,EAASgB;QAAI;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACZ,SAAS,CAACwB,IAAI,CAAC,CAACF,MAAM,EAAC,SACnD;MAAA,GAFSG,GAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACL;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACV,EAAA,CAnCuBH,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}