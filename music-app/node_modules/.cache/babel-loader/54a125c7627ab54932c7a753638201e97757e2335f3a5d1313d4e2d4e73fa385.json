{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\components\\\\SongCard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./SongCard.css\"; // Make sure this CSS file exists in the same folder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SongCard() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    // Fetch songs from public folder JSON file\n    fetch(\"/songs.json\") // Make sure songs.json is in public folder\n    .then(res => res.json()).then(data => setSongs(data)).catch(err => console.error(\"Error fetching songs:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song-list\",\n    children: songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: song.cover,\n        alt: song.songname,\n        className: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.songname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: song.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, song.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(SongCard, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c = SongCard;\nvar _c;\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","SongCard","_s","songs","setSongs","fetch","then","res","json","data","catch","err","console","error","className","children","map","song","src","cover","alt","songname","fileName","_jsxFileName","lineNumber","columnNumber","artist","controls","url","id","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/components/SongCard.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./SongCard.css\"; // Make sure this CSS file exists in the same folder\r\n\r\nexport default function SongCard() {\r\n  const [songs, setSongs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch songs from public folder JSON file\r\n    fetch(\"/songs.json\") // Make sure songs.json is in public folder\r\n      .then((res) => res.json())\r\n      .then((data) => setSongs(data))\r\n      .catch((err) => console.error(\"Error fetching songs:\", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"song-list\">\r\n      {songs.map((song) => (\r\n        <div key={song.id} className=\"song-card\">\r\n          <img src={song.cover} alt={song.songname} className=\"cover\" />\r\n          <h4>{song.songname}</h4>\r\n          <p>{song.artist}</p>\r\n          <audio controls src={song.url}></audio>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,aAAa,CAAC,CAAC;IAAA,CAClBC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBZ,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACdjB,OAAA;MAAmBc,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtCf,OAAA;QAAKkB,GAAG,EAAED,IAAI,CAACE,KAAM;QAACC,GAAG,EAAEH,IAAI,CAACI,QAAS;QAACP,SAAS,EAAC;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9DzB,OAAA;QAAAe,QAAA,EAAKE,IAAI,CAACI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBzB,OAAA;QAAAe,QAAA,EAAIE,IAAI,CAACS;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBzB,OAAA;QAAO2B,QAAQ;QAACT,GAAG,EAAED,IAAI,CAACW;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAJ/BR,IAAI,CAACY,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CAvBuBD,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}