{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\pages\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n\n  // Handle input change\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle signup submit\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validation\n    if (!form.name || !form.email || !form.password) {\n      setError(\"All fields are required!\");\n      return;\n    }\n\n    // Store user in context (simulate signup)\n    login({\n      name: form.name,\n      email: form.email\n    });\n\n    // Redirect to dashboard after signup\n    navigate(\"/dashboard\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: form.name,\n        placeholder: \"Enter your name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: form.email,\n        placeholder: \"Enter your email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: form.password,\n        placeholder: \"Enter your password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"vCRl6tCI667F/mB0aX+qet9JBI4=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useState","useAuth","useNavigate","jsxDEV","_jsxDEV","Signup","_s","login","navigate","form","setForm","name","email","password","error","setError","handleChange","e","target","value","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/pages/Signup.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Signup() {\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Handle input change\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Handle signup submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validation\r\n    if (!form.name || !form.email || !form.password) {\r\n      setError(\"All fields are required!\");\r\n      return;\r\n    }\r\n\r\n    // Store user in context (simulate signup)\r\n    login({\r\n      name: form.name,\r\n      email: form.email,\r\n    });\r\n\r\n    // Redirect to dashboard after signup\r\n    navigate(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h2>Create an Account</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <form onSubmit={handleSubmit} className=\"auth-form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={form.name}\r\n          placeholder=\"Enter your name\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={form.email}\r\n          placeholder=\"Enter your email\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={form.password}\r\n          placeholder=\"Enter your password\"\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Signup</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}