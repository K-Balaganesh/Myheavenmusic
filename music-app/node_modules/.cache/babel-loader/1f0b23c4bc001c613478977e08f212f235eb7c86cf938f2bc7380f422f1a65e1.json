{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.jsx\nimport { useEffect, useState } from \"react\";\nimport { searchDeezer } from \"../deezerService\";\nimport SongCard from \"../components/SongCard\";\nimport Search from \"../components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [songs, setSongs] = useState([]); // for search results\n  const [tamilSongs, setTamilSongs] = useState([]);\n  const [englishSongs, setEnglishSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // ðŸ”Ž For manual searches\n  const fetchSongs = async (query = \"Arijit Singh\") => {\n    setLoading(true);\n    const results = await searchDeezer(query, 30);\n    setSongs(results);\n    setLoading(false);\n  };\n\n  // ðŸŽµ Fetch Tamil & English on mount\n  useEffect(() => {\n    fetchSongs(); // default search\n    searchDeezer(\"tamil\", 30, \"Tamil\").then(setTamilSongs);\n    searchDeezer(\"english\", 30, \"English\").then(setEnglishSongs);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"20px 0\"\n      },\n      children: \"\\uD83C\\uDFB5 Discover Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: fetchSongs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Loading songs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(SongCard, {\n        song: song,\n        onAddToPlaylist: s => console.log(\"Added:\", s)\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: \"30px 0 10px\"\n      },\n      children: \"\\uD83D\\uDD25 Tamil Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      children: tamilSongs.map(song => /*#__PURE__*/_jsxDEV(SongCard, {\n        song: song,\n        onAddToPlaylist: s => console.log(\"Added:\", s)\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: \"30px 0 10px\"\n      },\n      children: \"\\uD83C\\uDF0E English Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      children: englishSongs.map(song => /*#__PURE__*/_jsxDEV(SongCard, {\n        song: song,\n        onAddToPlaylist: s => console.log(\"Added:\", s)\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"GQvKA6BWT05M17C4T9+4UhBsHsc=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","searchDeezer","SongCard","Search","jsxDEV","_jsxDEV","Dashboard","_s","songs","setSongs","tamilSongs","setTamilSongs","englishSongs","setEnglishSongs","loading","setLoading","fetchSongs","query","results","then","children","style","textAlign","margin","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","display","flexWrap","justifyContent","map","song","onAddToPlaylist","s","console","log","id","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/pages/Dashboard.jsx"],"sourcesContent":["// src/pages/Dashboard.jsx\r\nimport { useEffect, useState } from \"react\";\r\nimport { searchDeezer } from \"../deezerService\";\r\nimport SongCard from \"../components/SongCard\";\r\nimport Search from \"../components/Search\";\r\n\r\nexport default function Dashboard() {\r\n  const [songs, setSongs] = useState([]); // for search results\r\n  const [tamilSongs, setTamilSongs] = useState([]);\r\n  const [englishSongs, setEnglishSongs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // ðŸ”Ž For manual searches\r\n  const fetchSongs = async (query = \"Arijit Singh\") => {\r\n    setLoading(true);\r\n    const results = await searchDeezer(query, 30);\r\n    setSongs(results);\r\n    setLoading(false);\r\n  };\r\n\r\n  // ðŸŽµ Fetch Tamil & English on mount\r\n  useEffect(() => {\r\n    fetchSongs(); // default search\r\n    searchDeezer(\"tamil\", 30, \"Tamil\").then(setTamilSongs);\r\n    searchDeezer(\"english\", 30, \"English\").then(setEnglishSongs);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ textAlign: \"center\", margin: \"20px 0\" }}>ðŸŽµ Discover Songs</h2>\r\n      <Search onSearch={fetchSongs} />\r\n\r\n      {/* ðŸ”Ž Search results */}\r\n      {loading ? (\r\n        <p style={{ textAlign: \"center\" }}>Loading songs...</p>\r\n      ) : (\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\r\n          {songs.map((song) => (\r\n            <SongCard\r\n              key={song.id}\r\n              song={song}\r\n              onAddToPlaylist={(s) => console.log(\"Added:\", s)}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* ðŸŽµ Tamil Songs */}\r\n      <h2 style={{ margin: \"30px 0 10px\" }}>ðŸ”¥ Tamil Songs</h2>\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\r\n        {tamilSongs.map((song) => (\r\n          <SongCard\r\n            key={song.id}\r\n            song={song}\r\n            onAddToPlaylist={(s) => console.log(\"Added:\", s)}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* ðŸŽµ English Songs */}\r\n      <h2 style={{ margin: \"30px 0 10px\" }}>ðŸŒŽ English Songs</h2>\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\r\n        {englishSongs.map((song) => (\r\n          <SongCard\r\n            key={song.id}\r\n            song={song}\r\n            onAddToPlaylist={(s) => console.log(\"Added:\", s)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}