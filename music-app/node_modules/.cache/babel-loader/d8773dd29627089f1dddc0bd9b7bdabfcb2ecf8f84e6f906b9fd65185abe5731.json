{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\components\\\\SongCard.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SongCard({\n  song,\n  onAddToPlaylist\n}) {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const togglePlay = () => setIsPlaying(!isPlaying);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.title,\n      style: {\n        width: \"100%\",\n        borderRadius: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: song.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [song.artist, \" | \", song.language, \" | \", song.duration]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: song.url,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"0.5rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlay,\n        children: isPlaying ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"0.5rem\"\n        },\n        onClick: () => onAddToPlaylist(song),\n        children: \"Add to Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(SongCard, \"dxr5RgzQJlMZkbQdHY9iHZ+FF0w=\");\n_c = SongCard;\nvar _c;\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SongCard","song","onAddToPlaylist","_s","isPlaying","setIsPlaying","togglePlay","className","children","src","cover","alt","title","style","width","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","artist","language","duration","url","controls","marginTop","onClick","marginLeft","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/components/SongCard.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function SongCard({ song, onAddToPlaylist }) {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const togglePlay = () => setIsPlaying(!isPlaying);\r\n\r\n  return (\r\n    <div className=\"song-card\">\r\n      <img src={song.cover} alt={song.title} style={{ width: \"100%\", borderRadius: \"10px\" }} />\r\n      <h3>{song.title}</h3>\r\n      <p>{song.artist} | {song.language} | {song.duration}</p>\r\n      <audio src={song.url} controls />\r\n      <div style={{ marginTop: \"0.5rem\" }}>\r\n        <button onClick={togglePlay}>{isPlaying ? \"Pause\" : \"Play\"}</button>\r\n        <button style={{ marginLeft: \"0.5rem\" }} onClick={() => onAddToPlaylist(song)}>\r\n          Add to Playlist\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,UAAU,GAAGA,CAAA,KAAMD,YAAY,CAAC,CAACD,SAAS,CAAC;EAEjD,oBACEL,OAAA;IAAKQ,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBT,OAAA;MAAKU,GAAG,EAAER,IAAI,CAACS,KAAM;MAACC,GAAG,EAAEV,IAAI,CAACW,KAAM;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzFpB,OAAA;MAAAS,QAAA,EAAKP,IAAI,CAACW;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBpB,OAAA;MAAAS,QAAA,GAAIP,IAAI,CAACmB,MAAM,EAAC,KAAG,EAACnB,IAAI,CAACoB,QAAQ,EAAC,KAAG,EAACpB,IAAI,CAACqB,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDpB,OAAA;MAAOU,GAAG,EAAER,IAAI,CAACsB,GAAI;MAACC,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCpB,OAAA;MAAKc,KAAK,EAAE;QAAEY,SAAS,EAAE;MAAS,CAAE;MAAAjB,QAAA,gBAClCT,OAAA;QAAQ2B,OAAO,EAAEpB,UAAW;QAAAE,QAAA,EAAEJ,SAAS,GAAG,OAAO,GAAG;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACpEpB,OAAA;QAAQc,KAAK,EAAE;UAAEc,UAAU,EAAE;QAAS,CAAE;QAACD,OAAO,EAAEA,CAAA,KAAMxB,eAAe,CAACD,IAAI,CAAE;QAAAO,QAAA,EAAC;MAE/E;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAnBuBH,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}