{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\pages\\\\Categories.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Categories.css\";\n\n// A default cover image for categories that might not have enough songs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_COVER = \"https://placehold.co/100x100/303030/ffffff?text=Music\";\n\n// --- Configuration for all Category/Playlist Cards (UNCHANGED) ---\nconst CATEGORIES_CONFIG = [\n// Languages\n{\n  id: \"tamil\",\n  title: \"Top Tamil Songs\",\n  filter: song => {\n    var _song$language;\n    return (_song$language = song.language) === null || _song$language === void 0 ? void 0 : _song$language.toLowerCase().includes('tamil');\n  }\n}, {\n  id: \"english\",\n  title: \"International English Hits\",\n  filter: song => {\n    var _song$language2;\n    return (_song$language2 = song.language) === null || _song$language2 === void 0 ? void 0 : _song$language2.toLowerCase().includes('english');\n  }\n}, {\n  id: \"hindi\",\n  title: \"Bollywood Hindi Hits\",\n  filter: song => {\n    var _song$language3;\n    return (_song$language3 = song.language) === null || _song$language3 === void 0 ? void 0 : _song$language3.toLowerCase().includes('hindi');\n  }\n},\n// Playlists/Moods/Genres (Using songvariety array)\n{\n  id: \"trending\",\n  title: \"ðŸ”¥ Trending Now Package\",\n  filter: song => {\n    var _song$songvariety;\n    return (_song$songvariety = song.songvariety) === null || _song$songvariety === void 0 ? void 0 : _song$songvariety.includes('trending');\n  }\n}, {\n  id: \"mass\",\n  title: \"Mass/Kuthu Hits\",\n  filter: song => {\n    var _song$songvariety2;\n    return (_song$songvariety2 = song.songvariety) === null || _song$songvariety2 === void 0 ? void 0 : _song$songvariety2.includes('mass');\n  }\n}, {\n  id: \"love\",\n  title: \"ðŸ’– Pure Love Songs\",\n  filter: song => {\n    var _song$songvariety3, _song$songvariety4;\n    return ((_song$songvariety3 = song.songvariety) === null || _song$songvariety3 === void 0 ? void 0 : _song$songvariety3.includes('romantic')) || ((_song$songvariety4 = song.songvariety) === null || _song$songvariety4 === void 0 ? void 0 : _song$songvariety4.includes('love'));\n  }\n}, {\n  id: \"sad\",\n  title: \"ðŸ¥º Sad/Melody\",\n  filter: song => {\n    var _song$songvariety5, _song$songvariety6;\n    return ((_song$songvariety5 = song.songvariety) === null || _song$songvariety5 === void 0 ? void 0 : _song$songvariety5.includes('sad')) || ((_song$songvariety6 = song.songvariety) === null || _song$songvariety6 === void 0 ? void 0 : _song$songvariety6.includes('melody'));\n  }\n}, {\n  id: \"vibe\",\n  title: \"âœ¨ Vibe/Chill Songs\",\n  filter: song => {\n    var _song$songvariety7, _song$songvariety8;\n    return ((_song$songvariety7 = song.songvariety) === null || _song$songvariety7 === void 0 ? void 0 : _song$songvariety7.includes('vibe')) || ((_song$songvariety8 = song.songvariety) === null || _song$songvariety8 === void 0 ? void 0 : _song$songvariety8.includes('chill'));\n  }\n}, {\n  id: \"party\",\n  title: \"ðŸŽ‰ Party Starters\",\n  filter: song => {\n    var _song$songvariety9;\n    return (_song$songvariety9 = song.songvariety) === null || _song$songvariety9 === void 0 ? void 0 : _song$songvariety9.includes('party');\n  }\n}, {\n  id: \"dance\",\n  title: \"ðŸ’ƒ Dance Floor Hits\",\n  filter: song => {\n    var _song$songvariety0;\n    return (_song$songvariety0 = song.songvariety) === null || _song$songvariety0 === void 0 ? void 0 : _song$songvariety0.includes('dance');\n  }\n},\n// Artist Playlists (Assuming artist names are comma-separated in the JSON)\n{\n  id: \"anirudh\",\n  title: \"Anirudh Ravichander Playlist\",\n  filter: song => {\n    var _song$artist;\n    return (_song$artist = song.artist) === null || _song$artist === void 0 ? void 0 : _song$artist.includes('Anirudh Ravichander');\n  }\n}, {\n  id: \"sidsriram\",\n  title: \"Sid Sriram Collection\",\n  filter: song => {\n    var _song$artist2;\n    return (_song$artist2 = song.artist) === null || _song$artist2 === void 0 ? void 0 : _song$artist2.includes('Sid Sriram');\n  }\n}];\n\n// --- Category Card Component (MODIFIED) ---\nconst CategoryCard = /*#__PURE__*/React.memo(_c = ({\n  category,\n  covers,\n  onSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-card\",\n    onClick: () => onSelect(category),\n    \"aria-label\": `View songs in ${category.title}`,\n    children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-images\",\n      children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", Array.from({\n        length: 4\n      }).map((_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: covers[i] || DEFAULT_COVER,\n        alt: `${category.title} album cover ${i + 1}`,\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = DEFAULT_COVER;\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n});\n_c2 = CategoryCard;\nexport default function Categories() {\n  _s();\n  const [allSongs, setAllSongs] = useState([]);\n  const navigate = useNavigate();\n\n  // Fetch all songs once (UNCHANGED)\n  useEffect(() => {\n    fetch(\"/songs.json\").then(res => res.json()).then(data => {\n      setAllSongs(data);\n    }).catch(err => console.error(\"Error fetching songs:\", err));\n  }, []);\n\n  // Prepare categories, filtering songs and getting covers (UNCHANGED)\n  const categoriesWithCovers = useMemo(() => {\n    if (allSongs.length === 0) return [];\n    return CATEGORIES_CONFIG.map(category => {\n      const filteredSongs = allSongs.filter(category.filter);\n      const covers = filteredSongs.slice(0, 4).map(song => song.cover).filter(cover => cover);\n      return {\n        ...category,\n        covers: covers,\n        filteredSongs: filteredSongs,\n        songCount: filteredSongs.length\n      };\n    });\n  }, [allSongs]);\n\n  // Handler for clicking a category card (UNCHANGED)\n  const handleCategoryClick = category => {\n    navigate(`/categories/${category.id}`, {\n      state: {\n        title: category.title,\n        songs: category.filteredSongs\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories-page\",\n    children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"categories-title\",\n      children: \"Browse All Categories & Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-grid\",\n      children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", categoriesWithCovers.map(category => /*#__PURE__*/_jsxDEV(CategoryCard, {\n        category: category,\n        covers: category.covers,\n        onSelect: handleCategoryClick\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", categoriesWithCovers.length === 0 && allSongs.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#999',\n          gridColumn: '1 / -1'\n        },\n        children: \"No categories found or defined.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", allSongs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#999',\n          gridColumn: '1 / -1'\n        },\n        children: \"Loading categories...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 22\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(Categories, \"d7fVpzkBQPSlhh7wI4pGskd1U3Y=\", false, function () {\n  return [useNavigate];\n});\n_c3 = Categories;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CategoryCard$React.memo\");\n$RefreshReg$(_c2, \"CategoryCard\");\n$RefreshReg$(_c3, \"Categories\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useNavigate","jsxDEV","_jsxDEV","DEFAULT_COVER","CATEGORIES_CONFIG","id","title","filter","song","_song$language","language","toLowerCase","includes","_song$language2","_song$language3","_song$songvariety","songvariety","_song$songvariety2","_song$songvariety3","_song$songvariety4","_song$songvariety5","_song$songvariety6","_song$songvariety7","_song$songvariety8","_song$songvariety9","_song$songvariety0","_song$artist","artist","_song$artist2","CategoryCard","memo","_c","category","covers","onSelect","className","onClick","children","Array","from","length","map","_","i","src","alt","onError","e","target","onerror","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Categories","_s","allSongs","setAllSongs","navigate","fetch","then","res","json","data","catch","err","console","error","categoriesWithCovers","filteredSongs","slice","cover","songCount","handleCategoryClick","state","songs","style","color","gridColumn","_c3","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/pages/Categories.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; \r\nimport \"./Categories.css\"; \r\n\r\n// A default cover image for categories that might not have enough songs\r\nconst DEFAULT_COVER = \"https://placehold.co/100x100/303030/ffffff?text=Music\";\r\n\r\n// --- Configuration for all Category/Playlist Cards (UNCHANGED) ---\r\nconst CATEGORIES_CONFIG = [\r\nÂ  Â  // Languages\r\nÂ  Â  { id: \"tamil\", title: \"Top Tamil Songs\", filter: (song) => song.language?.toLowerCase().includes('tamil') },\r\nÂ  Â  { id: \"english\", title: \"International English Hits\", filter: (song) => song.language?.toLowerCase().includes('english') },\r\nÂ  Â  { id: \"hindi\", title: \"Bollywood Hindi Hits\", filter: (song) => song.language?.toLowerCase().includes('hindi') },\r\nÂ  Â  \r\nÂ  Â  // Playlists/Moods/Genres (Using songvariety array)\r\nÂ  Â  { id: \"trending\", title: \"ðŸ”¥ Trending Now Package\", filter: (song) => song.songvariety?.includes('trending') },\r\nÂ  Â  { id: \"mass\", title: \"Mass/Kuthu Hits\", filter: (song) => song.songvariety?.includes('mass') },\r\nÂ  Â  { id: \"love\", title: \"ðŸ’– Pure Love Songs\", filter: (song) => song.songvariety?.includes('romantic') || song.songvariety?.includes('love') },\r\nÂ  Â  { id: \"sad\", title: \"ðŸ¥º Sad/Melody\", filter: (song) => song.songvariety?.includes('sad') || song.songvariety?.includes('melody') },\r\nÂ  Â  { id: \"vibe\", title: \"âœ¨ Vibe/Chill Songs\", filter: (song) => song.songvariety?.includes('vibe') || song.songvariety?.includes('chill') },\r\nÂ  Â  { id: \"party\", title: \"ðŸŽ‰ Party Starters\", filter: (song) => song.songvariety?.includes('party') },\r\nÂ  Â  { id: \"dance\", title: \"ðŸ’ƒ Dance Floor Hits\", filter: (song) => song.songvariety?.includes('dance') },\r\n\r\nÂ  Â  // Artist Playlists (Assuming artist names are comma-separated in the JSON)\r\nÂ  Â  { id: \"anirudh\", title: \"Anirudh Ravichander Playlist\", filter: (song) => song.artist?.includes('Anirudh Ravichander') },\r\nÂ  Â  { id: \"sidsriram\", title: \"Sid Sriram Collection\", filter: (song) => song.artist?.includes('Sid Sriram') },\r\n];\r\n\r\n// --- Category Card Component (MODIFIED) ---\r\nconst CategoryCard = React.memo(({ category, covers, onSelect }) => {\r\nÂ  Â  return (\r\nÂ  Â  Â  Â  <div \r\nÂ  Â  Â  Â  Â  Â  className=\"category-card\" \r\nÂ  Â  Â  Â  Â  Â  onClick={() => onSelect(category)}\r\nÂ  Â  Â  Â  Â  Â  aria-label={`View songs in ${category.title}`}\r\nÂ  Â  Â  Â  >\r\nÂ  Â  Â  Â  Â  Â  {/* 1. The image grid comes first, making it the primary visual element */}\r\nÂ  Â  Â  Â  Â  Â  <div className=\"category-images\">\r\nÂ  Â  Â  Â  Â  Â  Â  Â  {Array.from({ length: 4 }).map((_, i) => (\r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  <img \r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={i} \r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  src={covers[i] || DEFAULT_COVER} \r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  alt={`${category.title} album cover ${i + 1}`} \r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onError={(e) => { e.target.onerror = null; e.target.src = DEFAULT_COVER; }}\r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  />\r\nÂ  Â  Â  Â  Â  Â  Â  Â  ))}\r\nÂ  Â  Â  Â  Â  Â  </div>\r\n            {/* 2. The title is now at the bottom */}\r\nÂ  Â  Â  Â  Â  Â  <h3>{category.title}</h3>\r\nÂ  Â  Â  Â  </div>\r\nÂ  Â  );\r\n});\r\n\r\n\r\nexport default function Categories() {\r\nÂ  Â  const [allSongs, setAllSongs] = useState([]);\r\nÂ  Â  const navigate = useNavigate(); \r\n\r\nÂ  Â  // Fetch all songs once (UNCHANGED)\r\nÂ  Â  useEffect(() => { \r\nÂ  Â  Â  Â  fetch(\"/songs.json\") \r\nÂ  Â  Â  Â  Â  .then((res) => res.json()) \r\nÂ  Â  Â  Â  Â  .then((data) => { \r\nÂ  Â  Â  Â  Â  Â  setAllSongs(data); \r\nÂ  Â  Â  Â  Â  }) \r\nÂ  Â  Â  Â  Â  .catch((err) => console.error(\"Error fetching songs:\", err)); \r\nÂ  Â  }, []); \r\n\r\nÂ  Â  // Prepare categories, filtering songs and getting covers (UNCHANGED)\r\nÂ  Â  const categoriesWithCovers = useMemo(() => {\r\nÂ  Â  Â  Â  if (allSongs.length === 0) return [];\r\n\r\nÂ  Â  Â  Â  return CATEGORIES_CONFIG.map(category => {\r\nÂ  Â  Â  Â  Â  Â  const filteredSongs = allSongs.filter(category.filter);\r\nÂ  Â  Â  Â  Â  Â  const covers = filteredSongs\r\nÂ  Â  Â  Â  Â  Â  Â  Â  .slice(0, 4)\r\nÂ  Â  Â  Â  Â  Â  Â  Â  .map(song => song.cover)\r\nÂ  Â  Â  Â  Â  Â  Â  Â  .filter(cover => cover); \r\n\r\nÂ  Â  Â  Â  Â  Â  return {\r\nÂ  Â  Â  Â  Â  Â  Â  Â  ...category,\r\nÂ  Â  Â  Â  Â  Â  Â  Â  covers: covers,\r\nÂ  Â  Â  Â  Â  Â  Â  Â  filteredSongs: filteredSongs, \r\nÂ  Â  Â  Â  Â  Â  Â  Â  songCount: filteredSongs.length\r\nÂ  Â  Â  Â  Â  Â  };\r\nÂ  Â  Â  Â  });\r\nÂ  Â  }, [allSongs]);\r\n\r\nÂ  Â  // Handler for clicking a category card (UNCHANGED)\r\nÂ  Â  const handleCategoryClick = (category) => {\r\nÂ  Â  Â  Â  navigate(`/categories/${category.id}`, { \r\nÂ  Â  Â  Â  Â  Â  state: { \r\nÂ  Â  Â  Â  Â  Â  Â  Â  title: category.title,\r\nÂ  Â  Â  Â  Â  Â  Â  Â  songs: category.filteredSongs \r\nÂ  Â  Â  Â  Â  Â  } \r\nÂ  Â  Â  Â  });\r\nÂ  Â  };\r\n\r\nÂ  Â  return (\r\nÂ  Â  Â  Â  <div className=\"categories-page\">\r\nÂ  Â  Â  Â  Â  Â  <h2 className=\"categories-title\">Browse All Categories & Playlists</h2>\r\nÂ  Â  Â  Â  Â  Â  \r\nÂ  Â  Â  Â  Â  Â  <div className=\"category-grid\">\r\nÂ  Â  Â  Â  Â  Â  Â  Â  {categoriesWithCovers.map((category) => (\r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  <CategoryCard \r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={category.id} \r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  category={category}\r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  covers={category.covers}\r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onSelect={handleCategoryClick}\r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  />\r\nÂ  Â  Â  Â  Â  Â  Â  Â  ))}\r\nÂ  Â  Â  Â  Â  Â  Â  Â  {categoriesWithCovers.length === 0 && allSongs.length > 0 && (\r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p style={{color: '#999', gridColumn: '1 / -1'}}>No categories found or defined.</p>\r\nÂ  Â  Â  Â  Â  Â  Â  Â  )}\r\nÂ  Â  Â  Â  Â  Â  Â  Â  {allSongs.length === 0 && (\r\nÂ  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <p style={{color: '#999', gridColumn: '1 / -1'}}>Loading categories...</p>\r\nÂ  Â  Â  Â  Â  Â  Â  Â  )}\r\nÂ  Â  Â  Â  Â  Â  </div>\r\nÂ  Â  Â  Â  </div>\r\nÂ  Â  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}