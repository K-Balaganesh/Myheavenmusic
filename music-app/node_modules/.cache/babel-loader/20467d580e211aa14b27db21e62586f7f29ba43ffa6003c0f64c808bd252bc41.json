{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\components\\\\MusicPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMusicPlayer } from '../context/MusicPlayerContext';\n// Import the icons you need (You must run: npm install react-icons)\nimport { FaPlay, FaPause, FaStepBackward, FaStepForward } from 'react-icons/fa';\n// The CSS is correctly imported in SongCard.jsx, but including it here doesn't hurt.\nimport './SongCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MusicPlayer() {\n  _s();\n  const {\n    activeSong,\n    isPlaying,\n    togglePlayPause,\n    playNext,\n    playPrevious,\n    currentTime,\n    // Assuming you have this state\n    duration,\n    // Assuming you have this state\n    handleSeek // Assuming you have this function\n  } = useMusicPlayer();\n\n  // Check if there is an active song before rendering the player\n  if (!activeSong) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-footer\",\n      style: {\n        justifyContent: 'center',\n        color: '#b3b3b3'\n      },\n      children: \"Select a song to start playing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Helper function to format time (e.g., 0:03, 3:30)\n  const formatTime = time => {\n    if (isNaN(time) || time < 0) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: activeSong.cover,\n        alt: activeSong.songname,\n        className: \"player-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: activeSong.songname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: activeSong.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playPrevious,\n          children: /*#__PURE__*/_jsxDEV(FaStepBackward, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlayPause,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playNext,\n          children: /*#__PURE__*/_jsxDEV(FaStepForward, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-time\",\n          children: formatTime(currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          className: \"progress-bar\",\n          min: \"0\",\n          max: duration || 100,\n          value: currentTime || 0\n          // You'll need to define handleSeek in your context to make this functional\n          // onChange={(e) => handleSeek(e.target.value)}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-time\",\n          children: formatTime(duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-options-right\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-to-playlist-btn\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(MusicPlayer, \"SePU3/eKJVZlJEfZJRajwXdwY0I=\", false, function () {\n  return [useMusicPlayer];\n});\n_c = MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useMusicPlayer","FaPlay","FaPause","FaStepBackward","FaStepForward","jsxDEV","_jsxDEV","MusicPlayer","_s","activeSong","isPlaying","togglePlayPause","playNext","playPrevious","currentTime","duration","handleSeek","className","style","justifyContent","color","children","fileName","_jsxFileName","lineNumber","columnNumber","formatTime","time","isNaN","minutes","Math","floor","seconds","src","cover","alt","songname","artist","onClick","type","min","max","value","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/components/MusicPlayer.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useMusicPlayer } from '../context/MusicPlayerContext';\r\n// Import the icons you need (You must run: npm install react-icons)\r\nimport { FaPlay, FaPause, FaStepBackward, FaStepForward } from 'react-icons/fa'; \r\n// The CSS is correctly imported in SongCard.jsx, but including it here doesn't hurt.\r\nimport './SongCard.css'; \r\n\r\nexport default function MusicPlayer() {\r\n    const { \r\n        activeSong, \r\n        isPlaying, \r\n        togglePlayPause, \r\n        playNext, \r\n        playPrevious,\r\n        currentTime, // Assuming you have this state\r\n        duration,    // Assuming you have this state\r\n        handleSeek,  // Assuming you have this function\r\n    } = useMusicPlayer();\r\n\r\n    // Check if there is an active song before rendering the player\r\n    if (!activeSong) {\r\n        return (\r\n            <div className=\"player-footer\" style={{ justifyContent: 'center', color: '#b3b3b3' }}>\r\n                Select a song to start playing.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Helper function to format time (e.g., 0:03, 3:30)\r\n    const formatTime = (time) => {\r\n        if (isNaN(time) || time < 0) return '0:00';\r\n        const minutes = Math.floor(time / 60);\r\n        const seconds = Math.floor(time % 60);\r\n        return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"player-footer\">\r\n            \r\n            {/* --- 1. Left Section: Song Info --- */}\r\n            <div className=\"player-info\">\r\n                <img src={activeSong.cover} alt={activeSong.songname} className=\"player-cover\" />\r\n                <div>\r\n                    <h4>{activeSong.songname}</h4>\r\n                    <p>{activeSong.artist}</p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* --- 2. Center Section: Controls & Progress --- */}\r\n            <div className=\"progress-container\">\r\n                {/* PLAYER CONTROLS - THIS IS WHERE YOUR BUTTONS ARE */}\r\n                <div className=\"player-controls\">\r\n                    <button onClick={playPrevious}><FaStepBackward /></button> \r\n                    <button onClick={togglePlayPause}>\r\n                        {isPlaying ? <FaPause /> : <FaPlay />}\r\n                    </button>\r\n                    <button onClick={playNext}><FaStepForward /></button> \r\n                </div>\r\n\r\n                {/* PROGRESS BAR */}\r\n                <div className=\"progress-bar-wrapper\">\r\n                    <span className=\"progress-time\">{formatTime(currentTime)}</span>\r\n                    <input \r\n                        type=\"range\" \r\n                        className=\"progress-bar\" \r\n                        min=\"0\" \r\n                        max={duration || 100} \r\n                        value={currentTime || 0} \r\n                        // You'll need to define handleSeek in your context to make this functional\r\n                        // onChange={(e) => handleSeek(e.target.value)}\r\n                    />\r\n                    <span className=\"progress-time\">{formatTime(duration)}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* --- 3. Right Section: Options/Playlist --- */}\r\n            <div className=\"player-options-right\">\r\n                {/* Placeholder button based on your CSS */}\r\n                <button className=\"add-to-playlist-btn\">+</button> \r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}