{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\context\\\\MusicPlayerContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useRef, useEffect, useCallback } from 'react';\nimport '../components/SongCard.css';\n\n// 1. Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayerContext = /*#__PURE__*/createContext();\n\n// 2. Custom Hook for easy consumption\nexport const useMusicPlayer = () => {\n  _s();\n  return useContext(MusicPlayerContext);\n};\n\n// Helper function to format seconds\n_s(useMusicPlayer, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst formatTime = seconds => {\n  if (isNaN(seconds) || seconds < 0) return \"0:00\";\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n};\n\n// Mock data structure for initial playlists\nconst initialPlaylists = [{\n  id: 'p1',\n  name: 'My Favourites',\n  songs: []\n}, {\n  id: 'p2',\n  name: 'Road Trip Jams',\n  songs: []\n}];\n\n// 3. Provider Component (Holds all state and logic)\nexport const MusicPlayerProvider = ({\n  children\n}) => {\n  _s2();\n  const [songs, setSongs] = useState([]);\n  const [activeSong, setActiveSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(null);\n\n  // Playlist State\n  const [playlists, setPlaylists] = useState(initialPlaylists);\n\n  // --- Core Playback Functions ---\n  const skipTrack = useCallback(direction => {\n    if (!activeSong || songs.length === 0) return;\n    const currentIndex = songs.findIndex(s => s.id === activeSong.id);\n    let newIndex = currentIndex + direction;\n    if (newIndex < 0) {\n      newIndex = songs.length - 1;\n    } else if (newIndex >= songs.length) {\n      newIndex = 0;\n    }\n    const nextSong = songs[newIndex];\n    if (nextSong) {\n      setActiveSong(nextSong);\n      setIsPlaying(true);\n    }\n  }, [activeSong, songs]);\n  const handleLoadedMetadata = useCallback(() => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  }, []);\n  const handleTimeUpdate = useCallback(() => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  }, []);\n  const handleSongEnded = useCallback(() => {\n    skipTrack(1);\n  }, [skipTrack]);\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play().catch(e => console.error(\"Play failed:\", e));\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleSeek = e => {\n    const audio = audioRef.current;\n    if (audio) {\n      const newTime = parseFloat(e.target.value);\n      audio.currentTime = newTime;\n      setCurrentTime(newTime);\n    }\n  };\n  const playSong = song => {\n    if ((activeSong === null || activeSong === void 0 ? void 0 : activeSong.id) !== song.id) {\n      setActiveSong(song);\n      setIsPlaying(true);\n    } else {\n      togglePlayPause();\n    }\n  };\n\n  // Playlist Management\n  const addToPlaylist = useCallback((playlistId, song) => {\n    setPlaylists(prevPlaylists => prevPlaylists.map(playlist => playlist.id === playlistId && !playlist.songs.some(s => s.id === song.id) ? {\n      ...playlist,\n      songs: [...playlist.songs, song]\n    } : playlist));\n    console.log(`Added ${song.songname} to playlist ID: ${playlistId}`);\n  }, []);\n  const createPlaylist = useCallback((name, initialSong = null) => {\n    const newPlaylist = {\n      id: Date.now().toString(),\n      name: name || `New Playlist ${playlists.length + 1}`,\n      songs: initialSong ? [initialSong] : []\n    };\n    setPlaylists(prevPlaylists => [...prevPlaylists, newPlaylist]);\n    console.log(`Created new playlist: ${newPlaylist.name}`);\n    return newPlaylist;\n  }, [playlists.length]);\n\n  // ✅ Handle Add to Playlist button click\n  const handleAddToPlaylist = () => {\n    if (!activeSong) return;\n    let favourites = playlists.find(p => p.name === \"My Favourites\");\n    if (!favourites) {\n      favourites = createPlaylist(\"My Favourites\", activeSong);\n    } else {\n      addToPlaylist(favourites.id, activeSong);\n    }\n  };\n\n  // --- Effects ---\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('ended', handleSongEnded);\n    return () => {\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('ended', handleSongEnded);\n    };\n  }, [handleLoadedMetadata, handleTimeUpdate, handleSongEnded, activeSong]);\n  useEffect(() => {\n    if (activeSong && audioRef.current && isPlaying) {\n      audioRef.current.play().catch(() => {\n        console.warn(\"Autoplay prevented. User needs to interact.\");\n        setIsPlaying(false);\n      });\n    }\n  }, [activeSong, isPlaying]);\n  const contextValue = {\n    activeSong,\n    isPlaying,\n    currentTime,\n    duration,\n    songs,\n    playSong,\n    togglePlayPause,\n    skipTrack,\n    handleSeek,\n    setSongs,\n    playlists,\n    // <-- This is what we need in Categories.jsx\n    addToPlaylist,\n    createPlaylist\n  };\n  return /*#__PURE__*/_jsxDEV(MusicPlayerContext.Provider, {\n    value: contextValue,\n    children: [\"\\xA0 \\xA0 \\xA0 \", children, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \", activeSong && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-footer\",\n      children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: activeSong.url,\n        preload: \"auto\"\n      }, activeSong.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-info player-info\",\n        children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: activeSong.cover,\n          alt: activeSong.songname,\n          className: \"player-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: activeSong.songname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: activeSong.artist.split(',')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls\",\n          children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => skipTrack(-1),\n            children: \"<<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePlayPause,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", isPlaying ? '❚❚' : '▶', \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => skipTrack(1),\n            children: \">>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-time\",\n          children: formatTime(currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: duration || 0,\n          value: currentTime,\n          className: \"progress-bar\",\n          onChange: handleSeek\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-time\",\n          children: formatTime(duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-options-right\",\n        children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-to-playlist-btn\",\n          onClick: handleAddToPlaylist,\n          children: \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 + \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), \"\\xA0 \\xA0 \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s2(MusicPlayerProvider, \"SOs4jeniannTHsvPDxYjbok/S/U=\");\n_c = MusicPlayerProvider;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","MusicPlayerContext","useMusicPlayer","_s","formatTime","seconds","isNaN","minutes","Math","floor","remainingSeconds","toString","padStart","initialPlaylists","id","name","songs","MusicPlayerProvider","children","_s2","setSongs","activeSong","setActiveSong","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","audioRef","playlists","setPlaylists","skipTrack","direction","length","currentIndex","findIndex","s","newIndex","nextSong","handleLoadedMetadata","current","handleTimeUpdate","handleSongEnded","togglePlayPause","audio","pause","play","catch","e","console","error","handleSeek","newTime","parseFloat","target","value","playSong","song","addToPlaylist","playlistId","prevPlaylists","map","playlist","some","log","songname","createPlaylist","initialSong","newPlaylist","Date","now","handleAddToPlaylist","favourites","find","p","addEventListener","removeEventListener","warn","contextValue","Provider","className","ref","src","url","preload","fileName","_jsxFileName","lineNumber","columnNumber","cover","alt","artist","split","onClick","type","min","max","onChange","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/context/MusicPlayerContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useRef, useEffect, useCallback } from 'react';\r\nimport '../components/SongCard.css'; \r\n\r\n// 1. Create Context\r\nconst MusicPlayerContext = createContext();\r\n\r\n// 2. Custom Hook for easy consumption\r\nexport const useMusicPlayer = () => {\r\n  return useContext(MusicPlayerContext);\r\n};\r\n\r\n// Helper function to format seconds\r\nconst formatTime = (seconds) => {\r\n  if (isNaN(seconds) || seconds < 0) return \"0:00\";\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = Math.floor(seconds % 60);\r\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n};\r\n\r\n// Mock data structure for initial playlists\r\nconst initialPlaylists = [\r\n  { id: 'p1', name: 'My Favourites', songs: [] },\r\n  { id: 'p2', name: 'Road Trip Jams', songs: [] },\r\n];\r\n\r\n// 3. Provider Component (Holds all state and logic)\r\nexport const MusicPlayerProvider = ({ children }) => {\r\n  const [songs, setSongs] = useState([]); \r\n  const [activeSong, setActiveSong] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const audioRef = useRef(null);\r\n  \r\n  // Playlist State\r\n  const [playlists, setPlaylists] = useState(initialPlaylists);\r\n\r\n  // --- Core Playback Functions ---\r\n  const skipTrack = useCallback((direction) => {\r\n    if (!activeSong || songs.length === 0) return;\r\n    \r\n    const currentIndex = songs.findIndex(s => s.id === activeSong.id);\r\n    let newIndex = currentIndex + direction;\r\n    \r\n    if (newIndex < 0) {\r\n      newIndex = songs.length - 1;\r\n    } else if (newIndex >= songs.length) {\r\n      newIndex = 0;\r\n    }\r\n    \r\n    const nextSong = songs[newIndex];\r\n    if (nextSong) {\r\n      setActiveSong(nextSong);\r\n      setIsPlaying(true);\r\n    }\r\n  }, [activeSong, songs]); \r\n\r\n  const handleLoadedMetadata = useCallback(() => {\r\n    if (audioRef.current) {\r\n      setDuration(audioRef.current.duration);\r\n    }\r\n  }, []);\r\n\r\n  const handleTimeUpdate = useCallback(() => {\r\n    if (audioRef.current) {\r\n      setCurrentTime(audioRef.current.currentTime);\r\n    }\r\n  }, []);\r\n\r\n  const handleSongEnded = useCallback(() => {\r\n    skipTrack(1); \r\n  }, [skipTrack]); \r\n\r\n  const togglePlayPause = () => {\r\n    const audio = audioRef.current;\r\n    if (!audio) return;\r\n\r\n    if (isPlaying) {\r\n      audio.pause();\r\n    } else {\r\n      audio.play().catch(e => console.error(\"Play failed:\", e));\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const handleSeek = (e) => {\r\n    const audio = audioRef.current;\r\n    if (audio) {\r\n      const newTime = parseFloat(e.target.value);\r\n      audio.currentTime = newTime;\r\n      setCurrentTime(newTime);\r\n    }\r\n  };\r\n  \r\n  const playSong = (song) => {\r\n    if (activeSong?.id !== song.id) {\r\n      setActiveSong(song);\r\n      setIsPlaying(true);\r\n    } else {\r\n      togglePlayPause();\r\n    }\r\n  };\r\n\r\n  // Playlist Management\r\n  const addToPlaylist = useCallback((playlistId, song) => {\r\n    setPlaylists(prevPlaylists =>\r\n      prevPlaylists.map(playlist =>\r\n        playlist.id === playlistId && !playlist.songs.some(s => s.id === song.id)\r\n          ? { ...playlist, songs: [...playlist.songs, song] }\r\n          : playlist\r\n      )\r\n    );\r\n    console.log(`Added ${song.songname} to playlist ID: ${playlistId}`);\r\n  }, []);\r\n\r\n  const createPlaylist = useCallback((name, initialSong = null) => {\r\n    const newPlaylist = {\r\n      id: Date.now().toString(),\r\n      name: name || `New Playlist ${playlists.length + 1}`,\r\n      songs: initialSong ? [initialSong] : []\r\n    };\r\n    setPlaylists(prevPlaylists => [...prevPlaylists, newPlaylist]);\r\n    console.log(`Created new playlist: ${newPlaylist.name}`);\r\n    return newPlaylist;\r\n  }, [playlists.length]);\r\n\r\n  // ✅ Handle Add to Playlist button click\r\n  const handleAddToPlaylist = () => {\r\n    if (!activeSong) return;\r\n    let favourites = playlists.find(p => p.name === \"My Favourites\");\r\n\r\n    if (!favourites) {\r\n      favourites = createPlaylist(\"My Favourites\", activeSong);\r\n    } else {\r\n      addToPlaylist(favourites.id, activeSong);\r\n    }\r\n  };\r\n\r\n  // --- Effects ---\r\n  useEffect(() => {\r\n    const audio = audioRef.current;\r\n    if (!audio) return;\r\n\r\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\r\n    audio.addEventListener('timeupdate', handleTimeUpdate);\r\n    audio.addEventListener('ended', handleSongEnded);\r\n\r\n    return () => {\r\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\r\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\r\n      audio.removeEventListener('ended', handleSongEnded);\r\n    };\r\n  }, [handleLoadedMetadata, handleTimeUpdate, handleSongEnded, activeSong]);\r\n\r\n  useEffect(() => {\r\n    if (activeSong && audioRef.current && isPlaying) {\r\n      audioRef.current.play().catch(() => {\r\n        console.warn(\"Autoplay prevented. User needs to interact.\");\r\n        setIsPlaying(false); \r\n      });\r\n    }\r\n  }, [activeSong, isPlaying]);\r\n\r\n  const contextValue = {\r\n    activeSong,\r\n    isPlaying,\r\n    currentTime,\r\n    duration,\r\n    songs,\r\n    playSong,        \r\n    togglePlayPause,\r\n    skipTrack,\r\n    handleSeek,\r\n    setSongs,\r\n    playlists, // <-- This is what we need in Categories.jsx\r\n    addToPlaylist,\r\n    createPlaylist,\r\n  };\r\n\r\n  return (\r\n    <MusicPlayerContext.Provider value={contextValue}>\r\n      {children}\r\n      \r\n      {/* --- The Persistent Player Footer --- */}\r\n      {activeSong && (\r\n        <div className=\"player-footer\">\r\n          <audio \r\n            ref={audioRef}\r\n            key={activeSong.id} \r\n            src={activeSong.url}\r\n            preload=\"auto\"\r\n          />\r\n          \r\n          {/* Song Info */}\r\n          <div className=\"song-info player-info\">\r\n            <img \r\n              src={activeSong.cover} \r\n              alt={activeSong.songname} \r\n              className=\"player-cover\" \r\n            />\r\n            <div>\r\n              <h4>{activeSong.songname}</h4>\r\n              <p>{activeSong.artist.split(',')[0]}</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Controls + Progress */}\r\n          <div className=\"progress-container\">\r\n            <div className=\"player-controls\">\r\n              <button onClick={() => skipTrack(-1)}>&lt;&lt;</button>\r\n              <button onClick={togglePlayPause}>\r\n                {isPlaying ? '❚❚' : '▶'}\r\n              </button>\r\n              <button onClick={() => skipTrack(1)}>&gt;&gt;</button>\r\n            </div>\r\n\r\n            <span className=\"progress-time\">{formatTime(currentTime)}</span>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max={duration || 0}\r\n              value={currentTime}\r\n              className=\"progress-bar\"\r\n              onChange={handleSeek}\r\n            />\r\n            <span className=\"progress-time\">{formatTime(duration)}</span>\r\n          </div>\r\n\r\n          {/* ✅ Add to Playlist Button */}\r\n          <div className=\"player-options-right\">\r\n            <button \r\n              className=\"add-to-playlist-btn\"\r\n              onClick={handleAddToPlaylist}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </MusicPlayerContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAClG,OAAO,4BAA4B;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,gBAAGR,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMS,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,OAAOT,UAAU,CAACO,kBAAkB,CAAC;AACvC,CAAC;;AAED;AAAAE,EAAA,CAJaD,cAAc;AAK3B,MAAME,UAAU,GAAIC,OAAO,IAAK;EAC9B,IAAIC,KAAK,CAACD,OAAO,CAAC,IAAIA,OAAO,GAAG,CAAC,EAAE,OAAO,MAAM;EAChD,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACJ,OAAO,GAAG,EAAE,CAAC;EACxC,MAAMK,gBAAgB,GAAGF,IAAI,CAACC,KAAK,CAACJ,OAAO,GAAG,EAAE,CAAC;EACjD,OAAO,GAAGE,OAAO,IAAIG,gBAAgB,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;AACrE,CAAC;;AAED;AACA,MAAMC,gBAAgB,GAAG,CACvB;EAAEC,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE,eAAe;EAAEC,KAAK,EAAE;AAAG,CAAC,EAC9C;EAAEF,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAG,CAAC,CAChD;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACnD,MAAM,CAACH,KAAK,EAAEI,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMkC,QAAQ,GAAGjC,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACA,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAACkB,gBAAgB,CAAC;;EAE5D;EACA,MAAMmB,SAAS,GAAGlC,WAAW,CAAEmC,SAAS,IAAK;IAC3C,IAAI,CAACZ,UAAU,IAAIL,KAAK,CAACkB,MAAM,KAAK,CAAC,EAAE;IAEvC,MAAMC,YAAY,GAAGnB,KAAK,CAACoB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACvB,EAAE,KAAKO,UAAU,CAACP,EAAE,CAAC;IACjE,IAAIwB,QAAQ,GAAGH,YAAY,GAAGF,SAAS;IAEvC,IAAIK,QAAQ,GAAG,CAAC,EAAE;MAChBA,QAAQ,GAAGtB,KAAK,CAACkB,MAAM,GAAG,CAAC;IAC7B,CAAC,MAAM,IAAII,QAAQ,IAAItB,KAAK,CAACkB,MAAM,EAAE;MACnCI,QAAQ,GAAG,CAAC;IACd;IAEA,MAAMC,QAAQ,GAAGvB,KAAK,CAACsB,QAAQ,CAAC;IAChC,IAAIC,QAAQ,EAAE;MACZjB,aAAa,CAACiB,QAAQ,CAAC;MACvBf,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC,EAAE,CAACH,UAAU,EAAEL,KAAK,CAAC,CAAC;EAEvB,MAAMwB,oBAAoB,GAAG1C,WAAW,CAAC,MAAM;IAC7C,IAAI+B,QAAQ,CAACY,OAAO,EAAE;MACpBb,WAAW,CAACC,QAAQ,CAACY,OAAO,CAACd,QAAQ,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,gBAAgB,GAAG5C,WAAW,CAAC,MAAM;IACzC,IAAI+B,QAAQ,CAACY,OAAO,EAAE;MACpBf,cAAc,CAACG,QAAQ,CAACY,OAAO,CAAChB,WAAW,CAAC;IAC9C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,eAAe,GAAG7C,WAAW,CAAC,MAAM;IACxCkC,SAAS,CAAC,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,KAAK,GAAGhB,QAAQ,CAACY,OAAO;IAC9B,IAAI,CAACI,KAAK,EAAE;IAEZ,IAAItB,SAAS,EAAE;MACbsB,KAAK,CAACC,KAAK,CAAC,CAAC;IACf,CAAC,MAAM;MACLD,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,CAAC,IAAIC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,CAAC,CAAC,CAAC;IAC3D;IACAzB,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAM6B,UAAU,GAAIH,CAAC,IAAK;IACxB,MAAMJ,KAAK,GAAGhB,QAAQ,CAACY,OAAO;IAC9B,IAAII,KAAK,EAAE;MACT,MAAMQ,OAAO,GAAGC,UAAU,CAACL,CAAC,CAACM,MAAM,CAACC,KAAK,CAAC;MAC1CX,KAAK,CAACpB,WAAW,GAAG4B,OAAO;MAC3B3B,cAAc,CAAC2B,OAAO,CAAC;IACzB;EACF,CAAC;EAED,MAAMI,QAAQ,GAAIC,IAAI,IAAK;IACzB,IAAI,CAAArC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEP,EAAE,MAAK4C,IAAI,CAAC5C,EAAE,EAAE;MAC9BQ,aAAa,CAACoC,IAAI,CAAC;MACnBlC,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLoB,eAAe,CAAC,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMe,aAAa,GAAG7D,WAAW,CAAC,CAAC8D,UAAU,EAAEF,IAAI,KAAK;IACtD3B,YAAY,CAAC8B,aAAa,IACxBA,aAAa,CAACC,GAAG,CAACC,QAAQ,IACxBA,QAAQ,CAACjD,EAAE,KAAK8C,UAAU,IAAI,CAACG,QAAQ,CAAC/C,KAAK,CAACgD,IAAI,CAAC3B,CAAC,IAAIA,CAAC,CAACvB,EAAE,KAAK4C,IAAI,CAAC5C,EAAE,CAAC,GACrE;MAAE,GAAGiD,QAAQ;MAAE/C,KAAK,EAAE,CAAC,GAAG+C,QAAQ,CAAC/C,KAAK,EAAE0C,IAAI;IAAE,CAAC,GACjDK,QACN,CACF,CAAC;IACDb,OAAO,CAACe,GAAG,CAAC,SAASP,IAAI,CAACQ,QAAQ,oBAAoBN,UAAU,EAAE,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,cAAc,GAAGrE,WAAW,CAAC,CAACiB,IAAI,EAAEqD,WAAW,GAAG,IAAI,KAAK;IAC/D,MAAMC,WAAW,GAAG;MAClBvD,EAAE,EAAEwD,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC5D,QAAQ,CAAC,CAAC;MACzBI,IAAI,EAAEA,IAAI,IAAI,gBAAgBe,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE;MACpDlB,KAAK,EAAEoD,WAAW,GAAG,CAACA,WAAW,CAAC,GAAG;IACvC,CAAC;IACDrC,YAAY,CAAC8B,aAAa,IAAI,CAAC,GAAGA,aAAa,EAAEQ,WAAW,CAAC,CAAC;IAC9DnB,OAAO,CAACe,GAAG,CAAC,yBAAyBI,WAAW,CAACtD,IAAI,EAAE,CAAC;IACxD,OAAOsD,WAAW;EACpB,CAAC,EAAE,CAACvC,SAAS,CAACI,MAAM,CAAC,CAAC;;EAEtB;EACA,MAAMsC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAI,CAACnD,UAAU,EAAE;IACjB,IAAIoD,UAAU,GAAG3C,SAAS,CAAC4C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC5D,IAAI,KAAK,eAAe,CAAC;IAEhE,IAAI,CAAC0D,UAAU,EAAE;MACfA,UAAU,GAAGN,cAAc,CAAC,eAAe,EAAE9C,UAAU,CAAC;IAC1D,CAAC,MAAM;MACLsC,aAAa,CAACc,UAAU,CAAC3D,EAAE,EAAEO,UAAU,CAAC;IAC1C;EACF,CAAC;;EAED;EACAxB,SAAS,CAAC,MAAM;IACd,MAAMgD,KAAK,GAAGhB,QAAQ,CAACY,OAAO;IAC9B,IAAI,CAACI,KAAK,EAAE;IAEZA,KAAK,CAAC+B,gBAAgB,CAAC,gBAAgB,EAAEpC,oBAAoB,CAAC;IAC9DK,KAAK,CAAC+B,gBAAgB,CAAC,YAAY,EAAElC,gBAAgB,CAAC;IACtDG,KAAK,CAAC+B,gBAAgB,CAAC,OAAO,EAAEjC,eAAe,CAAC;IAEhD,OAAO,MAAM;MACXE,KAAK,CAACgC,mBAAmB,CAAC,gBAAgB,EAAErC,oBAAoB,CAAC;MACjEK,KAAK,CAACgC,mBAAmB,CAAC,YAAY,EAAEnC,gBAAgB,CAAC;MACzDG,KAAK,CAACgC,mBAAmB,CAAC,OAAO,EAAElC,eAAe,CAAC;IACrD,CAAC;EACH,CAAC,EAAE,CAACH,oBAAoB,EAAEE,gBAAgB,EAAEC,eAAe,EAAEtB,UAAU,CAAC,CAAC;EAEzExB,SAAS,CAAC,MAAM;IACd,IAAIwB,UAAU,IAAIQ,QAAQ,CAACY,OAAO,IAAIlB,SAAS,EAAE;MAC/CM,QAAQ,CAACY,OAAO,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;QAClCE,OAAO,CAAC4B,IAAI,CAAC,6CAA6C,CAAC;QAC3DtD,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACH,UAAU,EAAEE,SAAS,CAAC,CAAC;EAE3B,MAAMwD,YAAY,GAAG;IACnB1D,UAAU;IACVE,SAAS;IACTE,WAAW;IACXE,QAAQ;IACRX,KAAK;IACLyC,QAAQ;IACRb,eAAe;IACfZ,SAAS;IACToB,UAAU;IACVhC,QAAQ;IACRU,SAAS;IAAE;IACX6B,aAAa;IACbQ;EACF,CAAC;EAED,oBACEnE,OAAA,CAACC,kBAAkB,CAAC+E,QAAQ;IAACxB,KAAK,EAAEuB,YAAa;IAAA7D,QAAA,GAAC,iBAChD,EAACA,QAAQ,EAAC,gCAEV,EAA4C,iBAC5C,EAACG,UAAU,iBACTrB,OAAA;MAAKiF,SAAS,EAAC,eAAe;MAAA/D,QAAA,GAAC,2BAC7B,eAAAlB,OAAA;QACEkF,GAAG,EAAErD,QAAS;QAEdsD,GAAG,EAAE9D,UAAU,CAAC+D,GAAI;QACpBC,OAAO,EAAC;MAAM,GAFThE,UAAU,CAACP,EAAE;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGnB,CAAC,sDAEF,EAAiB,2BACjB,eAAAzF,OAAA;QAAKiF,SAAS,EAAC,uBAAuB;QAAA/D,QAAA,GAAC,gCACrC,eAAAlB,OAAA;UACEmF,GAAG,EAAE9D,UAAU,CAACqE,KAAM;UACtBC,GAAG,EAAEtE,UAAU,CAAC6C,QAAS;UACzBe,SAAS,EAAC;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,kCACF,eAAAzF,OAAA;UAAAkB,QAAA,GAAK,qCACH,eAAAlB,OAAA;YAAAkB,QAAA,EAAKG,UAAU,CAAC6C;UAAQ;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,uCAC9B,eAAAzF,OAAA;YAAAkB,QAAA,EAAIG,UAAU,CAACuE,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,kCAC1C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,6BACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,6BAEN,EAA2B,2BAC3B,eAAAzF,OAAA;QAAKiF,SAAS,EAAC,oBAAoB;QAAA/D,QAAA,GAAC,gCAClC,eAAAlB,OAAA;UAAKiF,SAAS,EAAC,iBAAiB;UAAA/D,QAAA,GAAC,qCAC/B,eAAAlB,OAAA;YAAQ8F,OAAO,EAAEA,CAAA,KAAM9D,SAAS,CAAC,CAAC,CAAC,CAAE;YAAAd,QAAA,EAAC;UAAQ;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,uCACvD,eAAAzF,OAAA;YAAQ8F,OAAO,EAAElD,eAAgB;YAAA1B,QAAA,GAAC,0CAChC,EAACK,SAAS,GAAG,IAAI,GAAG,GAAG,EAAC,qCAC1B;UAAA;YAAA+D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,uCACT,eAAAzF,OAAA;YAAQ8F,OAAO,EAAEA,CAAA,KAAM9D,SAAS,CAAC,CAAC,CAAE;YAAAd,QAAA,EAAC;UAAQ;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,kCACxD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,kCAEN,eAAAzF,OAAA;UAAMiF,SAAS,EAAC,eAAe;UAAA/D,QAAA,EAAEd,UAAU,CAACqB,WAAW;QAAC;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,kCAChE,eAAAzF,OAAA;UACE+F,IAAI,EAAC,OAAO;UACZC,GAAG,EAAC,GAAG;UACPC,GAAG,EAAEtE,QAAQ,IAAI,CAAE;UACnB6B,KAAK,EAAE/B,WAAY;UACnBwD,SAAS,EAAC,cAAc;UACxBiB,QAAQ,EAAE9C;QAAW;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,kCACF,eAAAzF,OAAA;UAAMiF,SAAS,EAAC,eAAe;UAAA/D,QAAA,EAAEd,UAAU,CAACuB,QAAQ;QAAC;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,6BAC/D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,6BAEN,EAAgC,2BAChC,eAAAzF,OAAA;QAAKiF,SAAS,EAAC,sBAAsB;QAAA/D,QAAA,GAAC,gCACpC,eAAAlB,OAAA;UACEiF,SAAS,EAAC,qBAAqB;UAC/Ba,OAAO,EAAEtB,mBAAoB;UAAAtD,QAAA,EAC9B;QAED;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,6BACX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,wBACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,EAAC,YACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA6B,CAAC;AAElC,CAAC;AAACtE,GAAA,CAvNWF,mBAAmB;AAAAkF,EAAA,GAAnBlF,mBAAmB;AAAA,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}