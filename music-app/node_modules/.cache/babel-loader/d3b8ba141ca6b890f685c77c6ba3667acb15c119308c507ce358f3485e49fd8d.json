{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\components\\\\MusicPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMusicPlayer } from '../context/MusicPlayerContext';\nimport './SongCard.css';\n\n// ... (AddedToPlaylistPopup component remains unchanged)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MusicPlayer() {\n  _s();\n  const {\n    activeSong,\n    // ... other props\n    handleAddToPlaylist,\n    showPopup\n  } = useMusicPlayer();\n\n  // ... (activeSong check and formatTime function remain unchanged)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-options-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-to-playlist-btn\"\n\n          // ✅ THE FIX: Pass the current activeSong object to the handler.\n          ,\n          onClick: () => handleAddToPlaylist(activeSong),\n          \"aria-label\": \"Add to favorites\"\n          // Use 'disabled' to prevent accidental clicks when no song is loaded.\n          ,\n          disabled: !activeSong,\n          title: activeSong ? \"Add to My Favourites\" : \"No song playing\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddedToPlaylistPopup, {\n      show: showPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MusicPlayer, \"IJesN2Kj1wCwpdM7zqawx/WoLL0=\", false, function () {\n  return [useMusicPlayer];\n});\n_c = MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useMusicPlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","MusicPlayer","_s","activeSong","handleAddToPlaylist","showPopup","children","className","onClick","disabled","title","fileName","_jsxFileName","lineNumber","columnNumber","AddedToPlaylistPopup","show","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/components/MusicPlayer.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useMusicPlayer } from '../context/MusicPlayerContext';\r\nimport './SongCard.css';\r\n\r\n// ... (AddedToPlaylistPopup component remains unchanged)\r\n\r\nexport default function MusicPlayer() {\r\n  const {\r\n    activeSong,\r\n    // ... other props\r\n    handleAddToPlaylist,\r\n    showPopup \r\n  } = useMusicPlayer();\r\n\r\n  // ... (activeSong check and formatTime function remain unchanged)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"player-footer\">\r\n        {/* Left: Song info */}\r\n        {/* ... (player-info remains unchanged) */}\r\n\r\n        {/* Center: Controls + Progress */}\r\n        {/* ... (progress-container remains unchanged) */}\r\n\r\n        {/* Right: Add to playlist */}\r\n        <div className=\"player-options-right\">\r\n          <button \r\n            className=\"add-to-playlist-btn\" \r\n            \r\n            // ✅ THE FIX: Pass the current activeSong object to the handler.\r\n            onClick={() => handleAddToPlaylist(activeSong)} \r\n            \r\n            aria-label=\"Add to favorites\"\r\n            // Use 'disabled' to prevent accidental clicks when no song is loaded.\r\n            disabled={!activeSong}\r\n            title={activeSong ? \"Add to My Favourites\" : \"No song playing\"} \r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* NEW: Render the celebration popup component */}\r\n      <AddedToPlaylistPopup show={showPopup} />\r\n    </>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,OAAO,gBAAgB;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM;IACJC,UAAU;IACV;IACAC,mBAAmB;IACnBC;EACF,CAAC,GAAGT,cAAc,CAAC,CAAC;;EAEpB;;EAEA,oBACEE,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAD,QAAA,eAQ5BR,OAAA;QAAKS,SAAS,EAAC,sBAAsB;QAAAD,QAAA,eACnCR,OAAA;UACES,SAAS,EAAC;;UAEV;UAAA;UACAC,OAAO,EAAEA,CAAA,KAAMJ,mBAAmB,CAACD,UAAU,CAAE;UAE/C,cAAW;UACX;UAAA;UACAM,QAAQ,EAAE,CAACN,UAAW;UACtBO,KAAK,EAAEP,UAAU,GAAG,sBAAsB,GAAG,iBAAkB;UAAAG,QAAA,EAChE;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNhB,OAAA,CAACiB,oBAAoB;MAACC,IAAI,EAAEX;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACzC,CAAC;AAEP;AAACZ,EAAA,CAzCuBD,WAAW;EAAA,QAM7BL,cAAc;AAAA;AAAAqB,EAAA,GANIhB,WAAW;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}