{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\context\\\\MusicPlayerContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useRef, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayerContext = /*#__PURE__*/createContext();\nexport const useMusicPlayer = () => {\n  _s();\n  return useContext(MusicPlayerContext);\n};\n_s(useMusicPlayer, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst initialPlaylists = [{\n  id: 'p1',\n  name: 'My Favourites',\n  songs: []\n}, {\n  id: 'p2',\n  name: 'Road Trip Jams',\n  songs: []\n}];\nexport const MusicPlayerProvider = ({\n  children\n}) => {\n  _s2();\n  const [songs, setSongs] = useState([]); // optional global library\n  const [activeSong, setActiveSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(null);\n  const [playlists, setPlaylists] = useState(initialPlaylists);\n\n  // --- Playback controls ---\n  const playNext = useCallback(() => {\n    if (!songs || songs.length === 0) return;\n    if (!activeSong) {\n      setActiveSong(songs[0]);\n      setIsPlaying(true);\n      return;\n    }\n    const idx = songs.findIndex(s => s.id === activeSong.id);\n    const nextIndex = (idx + 1) % songs.length;\n    setActiveSong(songs[nextIndex]);\n    setIsPlaying(true);\n  }, [activeSong, songs]);\n  const playPrevious = useCallback(() => {\n    if (!songs || songs.length === 0) return;\n    if (!activeSong) {\n      setActiveSong(songs[0]);\n      setIsPlaying(true);\n      return;\n    }\n    const idx = songs.findIndex(s => s.id === activeSong.id);\n    const prevIndex = (idx - 1 + songs.length) % songs.length;\n    setActiveSong(songs[prevIndex]);\n    setIsPlaying(true);\n  }, [activeSong, songs]);\n  const togglePlayPause = useCallback(() => {\n    const audio = audioRef.current;\n    if (!audio) {\n      setIsPlaying(prev => !prev);\n      return;\n    }\n    if (isPlaying) {\n      audio.pause();\n      setIsPlaying(false);\n    } else {\n      const p = audio.play();\n      if (p !== undefined) {\n        p.then(() => setIsPlaying(true)).catch(() => setIsPlaying(false));\n      } else {\n        setIsPlaying(true);\n      }\n    }\n  }, [isPlaying]);\n  const playSong = useCallback(song => {\n    if (!song) return;\n    if (!activeSong || activeSong.id !== song.id) {\n      setActiveSong(song);\n      setIsPlaying(true);\n    } else {\n      togglePlayPause();\n    }\n  }, [activeSong, togglePlayPause]);\n  const handleSeek = useCallback(valueOrEvent => {\n    const audio = audioRef.current;\n    const value = typeof valueOrEvent === 'object' ? parseFloat(valueOrEvent.target.value) : parseFloat(valueOrEvent);\n    if (!isNaN(value) && audio) {\n      audio.currentTime = value;\n      setCurrentTime(value);\n    }\n  }, []);\n  const addToPlaylist = useCallback((playlistId, song) => {\n    if (!song) return;\n    setPlaylists(prev => prev.map(pl => pl.id === playlistId ? pl.songs.some(s => s.id === song.id) ? pl : {\n      ...pl,\n      songs: [...pl.songs, song]\n    } : pl));\n  }, []);\n  const createPlaylist = useCallback((name, initialSong = null) => {\n    const newPlaylist = {\n      id: Date.now().toString(),\n      name: name || `New Playlist`,\n      songs: initialSong ? [initialSong] : []\n    };\n    setPlaylists(prev => [...prev, newPlaylist]);\n    return newPlaylist;\n  }, []);\n  const handleAddToPlaylist = useCallback(() => {\n    if (!activeSong) return;\n    let favourites = playlists.find(p => p.name === \"My Favourites\");\n    if (!favourites) {\n      createPlaylist(\"My Favourites\", activeSong);\n    } else {\n      addToPlaylist(favourites.id, activeSong);\n    }\n  }, [activeSong, playlists, addToPlaylist, createPlaylist]);\n\n  // --- Audio events ---\n  const handleLoadedMetadata = useCallback(() => {\n    const audio = audioRef.current;\n    if (audio) setDuration(audio.duration || 0);\n  }, []);\n  const handleTimeUpdate = useCallback(() => {\n    const audio = audioRef.current;\n    if (audio) setCurrentTime(audio.currentTime || 0);\n  }, []);\n  const playNextOrFallback = useCallback(() => {\n    if (!songs || songs.length === 0) return setIsPlaying(false);\n    if (activeSong) {\n      playNext();\n    } else {\n      setActiveSong(songs[0]);\n      setIsPlaying(true);\n    }\n  }, [activeSong, songs, playNext]);\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('ended', playNextOrFallback);\n    return () => {\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('ended', playNextOrFallback);\n    };\n  }, [handleLoadedMetadata, handleTimeUpdate, playNextOrFallback]);\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    audio.src = activeSong ? activeSong.url : '';\n    if (activeSong) {\n      audio.currentTime = 0;\n      setCurrentTime(0);\n      setDuration(0);\n    }\n    if (isPlaying) {\n      const p = audio.play();\n      if (p !== undefined) {\n        p.then(() => setIsPlaying(true)).catch(() => setIsPlaying(false));\n      }\n    } else {\n      try {\n        audio.pause();\n      } catch (e) {}\n    }\n  }, [activeSong, isPlaying]);\n  const contextValue = {\n    activeSong,\n    isPlaying,\n    currentTime,\n    duration,\n    songs,\n    setSongs,\n    playSong,\n    togglePlayPause,\n    playNext,\n    playPrevious,\n    handleSeek,\n    playlists,\n    addToPlaylist,\n    createPlaylist,\n    handleAddToPlaylist\n  };\n  return /*#__PURE__*/_jsxDEV(MusicPlayerContext.Provider, {\n    value: contextValue,\n    children: [children, /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s2(MusicPlayerProvider, \"31aK7txFIjJT1VrghJFX1j+wcSM=\");\n_c = MusicPlayerProvider;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayerProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","MusicPlayerContext","useMusicPlayer","_s","initialPlaylists","id","name","songs","MusicPlayerProvider","children","_s2","setSongs","activeSong","setActiveSong","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","audioRef","playlists","setPlaylists","playNext","length","idx","findIndex","s","nextIndex","playPrevious","prevIndex","togglePlayPause","audio","current","prev","pause","p","play","undefined","then","catch","playSong","song","handleSeek","valueOrEvent","value","parseFloat","target","isNaN","addToPlaylist","playlistId","map","pl","some","createPlaylist","initialSong","newPlaylist","Date","now","toString","handleAddToPlaylist","favourites","find","handleLoadedMetadata","handleTimeUpdate","playNextOrFallback","addEventListener","removeEventListener","src","url","e","contextValue","Provider","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/context/MusicPlayerContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useRef, useEffect, useCallback } from 'react';\r\n\r\nconst MusicPlayerContext = createContext();\r\nexport const useMusicPlayer = () => useContext(MusicPlayerContext);\r\n\r\nconst initialPlaylists = [\r\n  { id: 'p1', name: 'My Favourites', songs: [] },\r\n  { id: 'p2', name: 'Road Trip Jams', songs: [] },\r\n];\r\n\r\nexport const MusicPlayerProvider = ({ children }) => {\r\n  const [songs, setSongs] = useState([]); // optional global library\r\n  const [activeSong, setActiveSong] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const audioRef = useRef(null);\r\n\r\n  const [playlists, setPlaylists] = useState(initialPlaylists);\r\n\r\n  // --- Playback controls ---\r\n  const playNext = useCallback(() => {\r\n    if (!songs || songs.length === 0) return;\r\n    if (!activeSong) {\r\n      setActiveSong(songs[0]);\r\n      setIsPlaying(true);\r\n      return;\r\n    }\r\n    const idx = songs.findIndex(s => s.id === activeSong.id);\r\n    const nextIndex = (idx + 1) % songs.length;\r\n    setActiveSong(songs[nextIndex]);\r\n    setIsPlaying(true);\r\n  }, [activeSong, songs]);\r\n\r\n  const playPrevious = useCallback(() => {\r\n    if (!songs || songs.length === 0) return;\r\n    if (!activeSong) {\r\n      setActiveSong(songs[0]);\r\n      setIsPlaying(true);\r\n      return;\r\n    }\r\n    const idx = songs.findIndex(s => s.id === activeSong.id);\r\n    const prevIndex = (idx - 1 + songs.length) % songs.length;\r\n    setActiveSong(songs[prevIndex]);\r\n    setIsPlaying(true);\r\n  }, [activeSong, songs]);\r\n\r\n  const togglePlayPause = useCallback(() => {\r\n    const audio = audioRef.current;\r\n    if (!audio) {\r\n      setIsPlaying(prev => !prev);\r\n      return;\r\n    }\r\n    if (isPlaying) {\r\n      audio.pause();\r\n      setIsPlaying(false);\r\n    } else {\r\n      const p = audio.play();\r\n      if (p !== undefined) {\r\n        p.then(() => setIsPlaying(true))\r\n         .catch(() => setIsPlaying(false));\r\n      } else {\r\n        setIsPlaying(true);\r\n      }\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  const playSong = useCallback((song) => {\r\n    if (!song) return;\r\n    if (!activeSong || activeSong.id !== song.id) {\r\n      setActiveSong(song);\r\n      setIsPlaying(true);\r\n    } else {\r\n      togglePlayPause();\r\n    }\r\n  }, [activeSong, togglePlayPause]);\r\n\r\n  const handleSeek = useCallback((valueOrEvent) => {\r\n    const audio = audioRef.current;\r\n    const value = typeof valueOrEvent === 'object' ? parseFloat(valueOrEvent.target.value) : parseFloat(valueOrEvent);\r\n    if (!isNaN(value) && audio) {\r\n      audio.currentTime = value;\r\n      setCurrentTime(value);\r\n    }\r\n  }, []);\r\n\r\n  const addToPlaylist = useCallback((playlistId, song) => {\r\n    if (!song) return;\r\n    setPlaylists(prev =>\r\n      prev.map(pl => pl.id === playlistId\r\n        ? (pl.songs.some(s => s.id === song.id) ? pl : { ...pl, songs: [...pl.songs, song] })\r\n        : pl\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  const createPlaylist = useCallback((name, initialSong = null) => {\r\n    const newPlaylist = {\r\n      id: Date.now().toString(),\r\n      name: name || `New Playlist`,\r\n      songs: initialSong ? [initialSong] : []\r\n    };\r\n    setPlaylists(prev => [...prev, newPlaylist]);\r\n    return newPlaylist;\r\n  }, []);\r\n\r\n  const handleAddToPlaylist = useCallback(() => {\r\n    if (!activeSong) return;\r\n    let favourites = playlists.find(p => p.name === \"My Favourites\");\r\n\r\n    if (!favourites) {\r\n      createPlaylist(\"My Favourites\", activeSong);\r\n    } else {\r\n      addToPlaylist(favourites.id, activeSong);\r\n    }\r\n  }, [activeSong, playlists, addToPlaylist, createPlaylist]);\r\n\r\n  // --- Audio events ---\r\n  const handleLoadedMetadata = useCallback(() => {\r\n    const audio = audioRef.current;\r\n    if (audio) setDuration(audio.duration || 0);\r\n  }, []);\r\n\r\n  const handleTimeUpdate = useCallback(() => {\r\n    const audio = audioRef.current;\r\n    if (audio) setCurrentTime(audio.currentTime || 0);\r\n  }, []);\r\n\r\n  const playNextOrFallback = useCallback(() => {\r\n    if (!songs || songs.length === 0) return setIsPlaying(false);\r\n    if (activeSong) {\r\n      playNext();\r\n    } else {\r\n      setActiveSong(songs[0]);\r\n      setIsPlaying(true);\r\n    }\r\n  }, [activeSong, songs, playNext]);\r\n\r\n  useEffect(() => {\r\n    const audio = audioRef.current;\r\n    if (!audio) return;\r\n\r\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\r\n    audio.addEventListener('timeupdate', handleTimeUpdate);\r\n    audio.addEventListener('ended', playNextOrFallback);\r\n\r\n    return () => {\r\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\r\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\r\n      audio.removeEventListener('ended', playNextOrFallback);\r\n    };\r\n  }, [handleLoadedMetadata, handleTimeUpdate, playNextOrFallback]);\r\n\r\n  useEffect(() => {\r\n    const audio = audioRef.current;\r\n    if (!audio) return;\r\n\r\n    audio.src = activeSong ? activeSong.url : '';\r\n    if (activeSong) {\r\n      audio.currentTime = 0;\r\n      setCurrentTime(0);\r\n      setDuration(0);\r\n    }\r\n\r\n    if (isPlaying) {\r\n      const p = audio.play();\r\n      if (p !== undefined) {\r\n        p.then(() => setIsPlaying(true))\r\n         .catch(() => setIsPlaying(false));\r\n      }\r\n    } else {\r\n      try { audio.pause(); } catch(e) {}\r\n    }\r\n  }, [activeSong, isPlaying]);\r\n\r\n  const contextValue = {\r\n    activeSong,\r\n    isPlaying,\r\n    currentTime,\r\n    duration,\r\n    songs,\r\n    setSongs,\r\n    playSong,\r\n    togglePlayPause,\r\n    playNext,\r\n    playPrevious,\r\n    handleSeek,\r\n    playlists,\r\n    addToPlaylist,\r\n    createPlaylist,\r\n    handleAddToPlaylist\r\n  };\r\n\r\n  return (\r\n    <MusicPlayerContext.Provider value={contextValue}>\r\n      {children}\r\n      <audio ref={audioRef} style={{ display: 'none' }} />\r\n    </MusicPlayerContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}