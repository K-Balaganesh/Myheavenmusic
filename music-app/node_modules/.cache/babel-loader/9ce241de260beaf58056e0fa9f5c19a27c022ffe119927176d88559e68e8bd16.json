{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useMusicPlayer } from '../context/MusicPlayerContext';\nimport \"./Home.css\";\nimport \"../components/Search.css\"; // Reusing Song Card styles \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SONGS_PER_ROW = 6;\nconst HISTORY_KEY = 'playedSongHistory'; // Key used in MusicPlayerContext for history \n\n// --- LOCAL STORAGE UTILITY --- \nconst getPlayedHistory = () => {\n  try {\n    const history = localStorage.getItem(HISTORY_KEY);\n    return history ? Array.from(new Set(JSON.parse(history))) : [];\n  } catch (e) {\n    return [];\n  }\n};\n\n// --- SongRow Component (kept the same) --- \nconst SongRow = /*#__PURE__*/React.memo(_c = ({\n  title,\n  songs,\n  activeSong,\n  isPlaying,\n  playSong,\n  categoryId\n}) => {\n  if (!songs || songs.length === 0) return null;\n  const infiniteSongs = [...songs, ...songs];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"song-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      id: `title-${categoryId}`,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `song-row-container ${categoryId}-scroll-area`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-row-content\",\n        children: infiniteSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `song-card ${(activeSong === null || activeSong === void 0 ? void 0 : activeSong.id) === song.id && isPlaying ? 'is-playing' : ''}`,\n          onClick: () => playSong(song),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.cover,\n            alt: song.songname,\n            className: \"cover\",\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = \"https://placehold.co/200x200/404040/ffffff?text=No+Cover\";\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: song.songname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: song.artist.split(',')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), song.movieName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"song-detail\",\n            children: [\"Movie: \", song.movieName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 48\n          }, this)]\n        }, `${song.id}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n});\n_c2 = SongRow;\nexport default function Home() {\n  _s();\n  const [allSongs, setAllSongs] = useState([]);\n  const {\n    activeSong,\n    isPlaying,\n    playSong\n  } = useMusicPlayer();\n\n  // --- MOCK USERNAME: Replace with your actual authentication hook ---\n  const [mockUsername, setMockUsername] = useState(\"Vignesh\");\n\n  // Fetch All Songs \n  useEffect(() => {\n    fetch(\"/songs.json\").then(res => res.json()).then(data => {\n      setAllSongs(data);\n    }).catch(err => console.error(\"Error fetching songs:\", err));\n  }, []);\n\n  // --- Song Filtering Logic (Unchanged) ---\n  const recentlyPlayed = useMemo(() => {\n    const historyIds = getPlayedHistory();\n    const songs = historyIds.map(id => allSongs.find(s => s.id === id)).filter(s => s !== undefined);\n    return songs.slice(0, SONGS_PER_ROW);\n  }, [allSongs]);\n  const trendingSongs = useMemo(() => {\n    const sorted = [...allSongs].sort((a, b) => (b.songVerity || 0) - (a.songVerity || 0));\n    return sorted.slice(0, SONGS_PER_ROW);\n  }, [allSongs]);\n  const tamilSongs = useMemo(() => {\n    return allSongs.filter(song => song.language && song.language.toLowerCase().includes('tamil')).slice(0, SONGS_PER_ROW);\n  }, [allSongs]);\n  const englishSongs = useMemo(() => {\n    return allSongs.filter(song => song.language && song.language.toLowerCase().includes('english')).slice(0, SONGS_PER_ROW);\n  }, [allSongs]);\n  const hindiSongs = useMemo(() => {\n    return allSongs.filter(song => song.language && song.language.toLowerCase().includes('hindi')).slice(0, SONGS_PER_ROW);\n  }, [allSongs]);\n  const isLoading = allSongs.length === 0;\n\n  // --- NEW: Personalized Welcome Message JSX with Multi-Color Text and Custom Font Class ---\n  const welcomeMessage = /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"main-welcome navbar-font\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"welcome-text\",\n      children: \"Welcome to \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"username-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name-color\",\n        children: [mockUsername, \"'s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"heaven-color\",\n        children: \" Music Heaven \\uD83C\\uDFB6\\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n  // --- END: Personalized Welcome Message JSX ---\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-dashboard\",\n    children: [welcomeMessage, isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading your music library...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SongRow, {\n        title: \"Your Recently Played\",\n        songs: recentlyPlayed,\n        categoryId: \"recent\",\n        activeSong: activeSong,\n        isPlaying: isPlaying,\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), \"\\xA0 \\xA0                \", /*#__PURE__*/_jsxDEV(SongRow, {\n        title: \"Global Trending Hits\",\n        songs: trendingSongs,\n        categoryId: \"trending\",\n        activeSong: activeSong,\n        isPlaying: isPlaying,\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SongRow, {\n        title: \"Top Tamil Melodies\",\n        songs: tamilSongs,\n        categoryId: \"tamil\",\n        activeSong: activeSong,\n        isPlaying: isPlaying,\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(SongRow, {\n        title: \"International English Favorites\",\n        songs: englishSongs,\n        categoryId: \"english\",\n        activeSong: activeSong,\n        isPlaying: isPlaying,\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SongRow, {\n        title: \"Best of Hindi Cinema\",\n        songs: hindiSongs,\n        categoryId: \"hindi\",\n        activeSong: activeSong,\n        isPlaying: isPlaying,\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"yfeBLCE0w+63Bq2TW2QHvYwrUFI=\", false, function () {\n  return [useMusicPlayer];\n});\n_c3 = Home;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SongRow$React.memo\");\n$RefreshReg$(_c2, \"SongRow\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useMusicPlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","SONGS_PER_ROW","HISTORY_KEY","getPlayedHistory","history","localStorage","getItem","Array","from","Set","JSON","parse","e","SongRow","memo","_c","title","songs","activeSong","isPlaying","playSong","categoryId","length","infiniteSongs","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","map","song","index","onClick","src","cover","alt","songname","onError","target","onerror","artist","split","movieName","_c2","Home","_s","allSongs","setAllSongs","mockUsername","setMockUsername","fetch","then","res","json","data","catch","err","console","error","recentlyPlayed","historyIds","find","s","filter","undefined","slice","trendingSongs","sorted","sort","a","b","songVerity","tamilSongs","language","toLowerCase","includes","englishSongs","hindiSongs","isLoading","welcomeMessage","_c3","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\"; \r\nimport { useMusicPlayer } from '../context/MusicPlayerContext'; \r\nimport \"./Home.css\";  \r\nimport \"../components/Search.css\"; // Reusing Song Card styles \r\n\r\nconst SONGS_PER_ROW = 6; \r\nconst HISTORY_KEY = 'playedSongHistory'; // Key used in MusicPlayerContext for history \r\n\r\n// --- LOCAL STORAGE UTILITY --- \r\nconst getPlayedHistory = () => { \r\n    try { \r\n        const history = localStorage.getItem(HISTORY_KEY); \r\n        return history ? Array.from(new Set(JSON.parse(history))) : []; \r\n    } catch (e) { \r\n        return []; \r\n    } \r\n}; \r\n\r\n// --- SongRow Component (kept the same) --- \r\nconst SongRow = React.memo(({ title, songs, activeSong, isPlaying, playSong, categoryId }) => { \r\n    if (!songs || songs.length === 0) return null; \r\n    const infiniteSongs = [...songs, ...songs]; \r\n\r\n    return ( \r\n        <section className=\"song-section\"> \r\n            <h2 className=\"section-title\" id={`title-${categoryId}`}>{title}</h2> \r\n            <div className={`song-row-container ${categoryId}-scroll-area`}> \r\n                <div className=\"song-row-content\"> \r\n                    {infiniteSongs.map((song, index) => ( \r\n                        <div  \r\n                            key={`${song.id}-${index}`} \r\n                            className={`song-card ${activeSong?.id === song.id && isPlaying ? 'is-playing' : ''}`} \r\n                            onClick={() => playSong(song)} \r\n                        > \r\n                            <img  \r\n                                src={song.cover}  \r\n                                alt={song.songname}  \r\n                                className=\"cover\"  \r\n                                onError={(e) => { e.target.onerror = null; e.target.src=\"https://placehold.co/200x200/404040/ffffff?text=No+Cover\"; }} \r\n                            /> \r\n                            <h4>{song.songname}</h4> \r\n                            <p>{song.artist.split(',')[0]}</p> \r\n                            {song.movieName && <p className=\"song-detail\">Movie: {song.movieName}</p>} \r\n                        </div> \r\n                    ))} \r\n                </div> \r\n            </div> \r\n        </section> \r\n    ); \r\n}); \r\n\r\n\r\nexport default function Home() { \r\n    const [allSongs, setAllSongs] = useState([]); \r\n    const { activeSong, isPlaying, playSong } = useMusicPlayer(); \r\n    \r\n    // --- MOCK USERNAME: Replace with your actual authentication hook ---\r\n    const [mockUsername, setMockUsername] = useState(\"Vignesh\"); \r\n\r\n    // Fetch All Songs \r\n    useEffect(() => { \r\n        fetch(\"/songs.json\") \r\n          .then((res) => res.json()) \r\n          .then((data) => { \r\n            setAllSongs(data); \r\n          }) \r\n          .catch((err) => console.error(\"Error fetching songs:\", err)); \r\n    }, []); \r\n\r\n    // --- Song Filtering Logic (Unchanged) ---\r\n    const recentlyPlayed = useMemo(() => { \r\n        const historyIds = getPlayedHistory(); \r\n        const songs = historyIds.map(id => allSongs.find(s => s.id === id)).filter(s => s !== undefined); \r\n        return songs.slice(0, SONGS_PER_ROW);  \r\n    }, [allSongs]); \r\n\r\n    const trendingSongs = useMemo(() => { \r\n        const sorted = [...allSongs].sort((a, b) => (b.songVerity || 0) - (a.songVerity || 0)); \r\n        return sorted.slice(0, SONGS_PER_ROW); \r\n    }, [allSongs]); \r\n\r\n    const tamilSongs = useMemo(() => { \r\n        return allSongs.filter(song => song.language && song.language.toLowerCase().includes('tamil')).slice(0, SONGS_PER_ROW); \r\n    }, [allSongs]); \r\n\r\n    const englishSongs = useMemo(() => { \r\n        return allSongs.filter(song => song.language && song.language.toLowerCase().includes('english')).slice(0, SONGS_PER_ROW); \r\n    }, [allSongs]); \r\n    \r\n    const hindiSongs = useMemo(() => { \r\n        return allSongs.filter(song => song.language && song.language.toLowerCase().includes('hindi')).slice(0, SONGS_PER_ROW); \r\n    }, [allSongs]); \r\n\r\n    const isLoading = allSongs.length === 0; \r\n\r\n    // --- NEW: Personalized Welcome Message JSX with Multi-Color Text and Custom Font Class ---\r\n    const welcomeMessage = (\r\n        <h1 className=\"main-welcome navbar-font\">\r\n            <span className=\"welcome-text\">Welcome to </span>\r\n            <span className=\"username-text\">\r\n                <span className=\"name-color\">{mockUsername}'s</span>\r\n                <span className=\"heaven-color\"> Music Heaven 🎶✨</span>\r\n            </span>\r\n        </h1>\r\n    );\r\n    // --- END: Personalized Welcome Message JSX ---\r\n\r\n    return ( \r\n        <div className=\"home-dashboard\"> \r\n            \r\n            {/* RENDER THE PERSONALIZED MESSAGE */}\r\n            {welcomeMessage}\r\n            \r\n            {isLoading ? ( \r\n                <p className=\"loading-message\">Loading your music library...</p> \r\n            ) : ( \r\n                <> \r\n                    <SongRow title=\"Your Recently Played\" songs={recentlyPlayed} categoryId=\"recent\" activeSong={activeSong} isPlaying={isPlaying} playSong={playSong} /> \r\n                    <SongRow title=\"Global Trending Hits\" songs={trendingSongs} categoryId=\"trending\" activeSong={activeSong} isPlaying={isPlaying} playSong={playSong} />\r\n                   <SongRow title=\"Top Tamil Melodies\" songs={tamilSongs} categoryId=\"tamil\" activeSong={activeSong} isPlaying={isPlaying} playSong={playSong} /> \r\n                    <SongRow title=\"International English Favorites\" songs={englishSongs} categoryId=\"english\" activeSong={activeSong} isPlaying={isPlaying} playSong={playSong} /> \r\n                    <SongRow title=\"Best of Hindi Cinema\" songs={hindiSongs} categoryId=\"hindi\" activeSong={activeSong} isPlaying={isPlaying} playSong={playSong} /> \r\n                </> \r\n            )} \r\n        </div> \r\n    ); \r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}