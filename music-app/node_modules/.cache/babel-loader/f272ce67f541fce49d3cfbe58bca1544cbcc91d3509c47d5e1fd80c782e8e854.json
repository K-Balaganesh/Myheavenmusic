{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\pages\\\\CategoryDetail.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useMusicPlayer } from '../context/MusicPlayerContext';\n// Reuse the SongCard styles for the basic card look\nimport \"../components/SongCard.css\";\n// Import the new/consolidated detail page specific styles\nimport \"./CategoryDetail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CategoryDetail() {\n  _s();\n  // Get parameters from the URL (e.g., /categories/trending)\n  const {\n    categoryId\n  } = useParams();\n  // Get the data passed during navigation (title and song list)\n  const location = useLocation();\n  const {\n    title,\n    songs\n  } = location.state || {};\n\n  // Get music player functions\n  const {\n    activeSong,\n    isPlaying,\n    playSong\n  } = useMusicPlayer();\n  if (!songs || songs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-detail-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"detail-title\",\n        children: title || categoryId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-message\",\n        children: \"No songs found in this playlist/category. Try adding some!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Render the list of songs\n  const renderSongCard = song => /*#__PURE__*/_jsxDEV(\"div\", {\n    // Use the base song-card class for shared styling\n    className: `song-card ${(activeSong === null || activeSong === void 0 ? void 0 : activeSong.id) === song.id && isPlaying ? 'is-playing' : ''}`,\n    onClick: () => playSong(song),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover || \"https://placehold.co/200x200/404040/ffffff?text=No+Cover\",\n      alt: song.songname || \"Unknown Song\",\n      className: \"cover\",\n      onError: e => {\n        e.target.onerror = null;\n        e.target.src = \"https://placehold.co/200x200/404040/ffffff?text=No+Cover\";\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.songname || 'Unknown Title'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"artist-name\",\n        children: song.artist ? song.artist.split(',')[0] : 'Unknown Artist'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), song.moviename && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie-name\",\n        children: [\"Movie: \", song.moviename]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, song.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-detail-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"detail-title\",\n      children: title || `Category: ${categoryId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"song-count\",\n      children: [songs.length, \" songs found. Click any card to play!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-grid\",\n      children: songs.map(renderSongCard)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(CategoryDetail, \"19ORkXL34GEe1U0C1eRGTYUIY9A=\", false, function () {\n  return [useParams, useLocation, useMusicPlayer];\n});\n_c = CategoryDetail;\nvar _c;\n$RefreshReg$(_c, \"CategoryDetail\");","map":{"version":3,"names":["React","useLocation","useParams","useMusicPlayer","jsxDEV","_jsxDEV","CategoryDetail","_s","categoryId","location","title","songs","state","activeSong","isPlaying","playSong","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderSongCard","song","id","onClick","src","cover","alt","songname","onError","e","target","onerror","artist","split","moviename","map","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/pages/CategoryDetail.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { useMusicPlayer } from '../context/MusicPlayerContext';\r\n// Reuse the SongCard styles for the basic card look\r\nimport \"../components/SongCard.css\"; \r\n// Import the new/consolidated detail page specific styles\r\nimport \"./CategoryDetail.css\"; \r\n\r\nexport default function CategoryDetail() {\r\n    // Get parameters from the URL (e.g., /categories/trending)\r\n    const { categoryId } = useParams();\r\n    // Get the data passed during navigation (title and song list)\r\n    const location = useLocation();\r\n    const { title, songs } = location.state || {};\r\n    \r\n    // Get music player functions\r\n    const { activeSong, isPlaying, playSong } = useMusicPlayer();\r\n\r\n    if (!songs || songs.length === 0) {\r\n        return (\r\n            <div className=\"category-detail-page\">\r\n                <h1 className=\"detail-title\">{title || categoryId}</h1>\r\n                <p className=\"loading-message\">No songs found in this playlist/category. Try adding some!</p>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    // Render the list of songs\r\n    const renderSongCard = (song) => (\r\n        <div  \r\n            // Use the base song-card class for shared styling\r\n            className={`song-card ${activeSong?.id === song.id && isPlaying ? 'is-playing' : ''}`} \r\n            onClick={() => playSong(song)} \r\n            key={song.id} \r\n        > \r\n            <img  \r\n                src={song.cover || \"https://placehold.co/200x200/404040/ffffff?text=No+Cover\"}  \r\n                alt={song.songname || \"Unknown Song\"}  \r\n                className=\"cover\"  \r\n                onError={(e) => { e.target.onerror = null; e.target.src=\"https://placehold.co/200x200/404040/ffffff?text=No+Cover\"; }} \r\n            /> \r\n            {/* Added styling classes for text below */}\r\n            <div className=\"song-info\">\r\n                <h4>{song.songname || 'Unknown Title'}</h4> \r\n                <p className=\"artist-name\">{song.artist ? song.artist.split(',')[0] : 'Unknown Artist'}</p> \r\n                {song.moviename && <p className=\"movie-name\">Movie: {song.moviename}</p>} \r\n            </div>\r\n        </div> \r\n    );\r\n\r\n    return (\r\n        <div className=\"category-detail-page\">\r\n            <h1 className=\"detail-title\">{title || `Category: ${categoryId}`}</h1>\r\n            <p className=\"song-count\">{songs.length} songs found. Click any card to play!</p>\r\n            \r\n            {/* Use the new song-grid class for the layout */}\r\n            <div className=\"song-grid\"> \r\n                {songs.map(renderSongCard)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}