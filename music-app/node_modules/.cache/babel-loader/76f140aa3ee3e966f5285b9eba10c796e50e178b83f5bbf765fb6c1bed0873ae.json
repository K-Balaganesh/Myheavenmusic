{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useMusicPlayer } from '../context/MusicPlayerContext';\nimport \"./Home.css\";\nimport \"../components/Search.css\"; // Reusing Song Card styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SONGS_PER_ROW = 6;\nconst HISTORY_KEY = 'playedSongHistory'; // Key used in MusicPlayerContext for history\n\n// --- AUTHENTICATION HOOK (MOCK IMPLEMENTATION) ---\n// ⚠️ REPLACE THIS WITH YOUR ACTUAL AUTHENTICATION LOGIC ⚠️\nconst useAuth = () => {\n  _s();\n  // In a real app, this state would come from your global authentication context\n  // For now, we'll use a local state that defaults to null (unauthenticated).\n  const [user, setUser] = useState({\n    name: null\n  }); // name: 'Vignesh' for authenticated test\n\n  // Simulate an authenticated user after a delay (e.g., after login/signup)\n  // useEffect(() => {\n  //     // Simulate successful login/signup\n  //     setTimeout(() => {\n  //         setUser({ name: \"JaneDoe\" }); // Replace with the actual fetched username\n  //     }, 1000);\n  // }, []);\n\n  return {\n    username: user.name,\n    isAuthenticated: !!user.name\n  };\n};\n\n// --- LOCAL STORAGE UTILITY ---\n_s(useAuth, \"JyrzJBfdbIAdYNERIqiGHknfj+0=\");\nconst getPlayedHistory = () => {\n  try {\n    const history = localStorage.getItem(HISTORY_KEY);\n    return history ? Array.from(new Set(JSON.parse(history))) : [];\n  } catch (e) {\n    return [];\n  }\n};\n\n// --- SongRow Component ---\nconst SongRow = /*#__PURE__*/React.memo(_c = ({\n  title,\n  songs,\n  activeSong,\n  isPlaying,\n  playSong,\n  categoryId\n}) => {\n  if (!songs || songs.length === 0) return null;\n  const infiniteSongs = [...songs, ...songs];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"song-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      id: `title-${categoryId}`,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `song-row-container ${categoryId}-scroll-area`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-row-content\",\n        children: infiniteSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `song-card ${(activeSong === null || activeSong === void 0 ? void 0 : activeSong.id) === song.id && isPlaying ? 'is-playing' : ''}`,\n          onClick: () => playSong(song),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.cover,\n            alt: song.songname,\n            className: \"cover\",\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = \"https://placehold.co/200x200/404040/ffffff?text=No+Cover\";\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: song.songname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: song.artist.split(',')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), song.movieName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"song-detail\",\n            children: [\"Movie: \", song.movieName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 48\n          }, this)]\n        }, `${song.id}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n});\n_c2 = SongRow;\nexport default function Home() {\n  _s2();\n  const [allSongs, setAllSongs] = useState([]);\n  const {\n    activeSong,\n    isPlaying,\n    playSong\n  } = useMusicPlayer();\n\n  // --- USING AUTH HOOK FOR USERNAME and AUTH STATE ---\n  const {\n    username,\n    isAuthenticated\n  } = useAuth();\n\n  // Fetch All Songs\n  useEffect(() => {\n    fetch(\"/songs.json\").then(res => res.json()).then(data => {\n      setAllSongs(data);\n    }).catch(err => console.error(\"Error fetching songs:\", err));\n  }, []);\n\n  // --- Song Filtering Logic (Unchanged) ---\n  const recentlyPlayed = useMemo(() => {\n    const historyIds = getPlayedHistory();\n    const songs = historyIds.map(id => allSongs.find(s => s.id === id)).filter(s => s !== undefined);\n    return songs.slice(0, SONGS_PER_ROW);\n  }, [allSongs]);\n  const trendingSongs = useMemo(() => {\n    return allSongs.filter(song => Array.isArray(song.songvariety) && song.songvariety.some(v => v.toLowerCase() === \"trending\")).slice(0, SONGS_PER_ROW);\n  }, [allSongs]);\n  const tamilSongs = useMemo(() => {\n    return allSongs.filter(song => song.language && song.language.toLowerCase().includes('tamil')).slice(0, SONGS_PER_ROW);\n  }, [allSongs]);\n  const englishSongs = useMemo(() => {\n    return allSongs.filter(song => song.language && song.language.toLowerCase().includes('english')).slice(0, SONGS_PER_ROW);\n  }, [allSongs]);\n  const hindiSongs = useMemo(() => {\n    return allSongs.filter(song => song.language && song.language.toLowerCase().includes('hindi')).slice(0, SONGS_PER_ROW);\n  }, [allSongs]);\n  const isLoading = allSongs.length === 0;\n\n  // --- Personalized Welcome Message JSX (CONDITIONAL LOGIC ADDED) ---\n  const welcomeMessage = /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"main-welcome navbar-font\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"welcome-text\",\n      children: \"Welcome to \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"username-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name-color\",\n        children: isAuthenticated ? `${username}'s` : 'My'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"heaven-color\",\n        children: \" Music  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-dashboard\",\n    children: [welcomeMessage, isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading your music library...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SongRow, {\n        title: \"Your Recently Played\",\n        songs: recentlyPlayed,\n        categoryId: \"recent\",\n        activeSong: activeSong,\n        isPlaying: isPlaying,\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SongRow, {\n        title: \"Global Trending Hits\",\n        songs: trendingSongs,\n        categoryId: \"trending\",\n        activeSong: activeSong,\n        isPlaying: isPlaying,\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SongRow, {\n        title: \"Top Tamil Melodies\",\n        songs: tamilSongs,\n        categoryId: \"tamil\",\n        activeSong: activeSong,\n        isPlaying: isPlaying,\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SongRow, {\n        title: \"International English Favorites\",\n        songs: englishSongs,\n        categoryId: \"english\",\n        activeSong: activeSong,\n        isPlaying: isPlaying,\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SongRow, {\n        title: \"Best of Hindi Cinema\",\n        songs: hindiSongs,\n        categoryId: \"hindi\",\n        activeSong: activeSong,\n        isPlaying: isPlaying,\n        playSong: playSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s2(Home, \"0sXYKpzHncUvA2XifpGEMcV/5A8=\", false, function () {\n  return [useMusicPlayer, useAuth];\n});\n_c3 = Home;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SongRow$React.memo\");\n$RefreshReg$(_c2, \"SongRow\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useMusicPlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","SONGS_PER_ROW","HISTORY_KEY","useAuth","_s","user","setUser","name","username","isAuthenticated","getPlayedHistory","history","localStorage","getItem","Array","from","Set","JSON","parse","e","SongRow","memo","_c","title","songs","activeSong","isPlaying","playSong","categoryId","length","infiniteSongs","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","map","song","index","onClick","src","cover","alt","songname","onError","target","onerror","artist","split","movieName","_c2","Home","_s2","allSongs","setAllSongs","fetch","then","res","json","data","catch","err","console","error","recentlyPlayed","historyIds","find","s","filter","undefined","slice","trendingSongs","isArray","songvariety","some","v","toLowerCase","tamilSongs","language","includes","englishSongs","hindiSongs","isLoading","welcomeMessage","_c3","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useMusicPlayer } from '../context/MusicPlayerContext';\r\nimport \"./Home.css\";\r\nimport \"../components/Search.css\"; // Reusing Song Card styles\r\n\r\nconst SONGS_PER_ROW = 6;\r\nconst HISTORY_KEY = 'playedSongHistory'; // Key used in MusicPlayerContext for history\r\n\r\n// --- AUTHENTICATION HOOK (MOCK IMPLEMENTATION) ---\r\n// ⚠️ REPLACE THIS WITH YOUR ACTUAL AUTHENTICATION LOGIC ⚠️\r\nconst useAuth = () => {\r\n    // In a real app, this state would come from your global authentication context\r\n    // For now, we'll use a local state that defaults to null (unauthenticated).\r\n    const [user, setUser] = useState({ name: null }); // name: 'Vignesh' for authenticated test\r\n\r\n    // Simulate an authenticated user after a delay (e.g., after login/signup)\r\n    // useEffect(() => {\r\n    //     // Simulate successful login/signup\r\n    //     setTimeout(() => {\r\n    //         setUser({ name: \"JaneDoe\" }); // Replace with the actual fetched username\r\n    //     }, 1000);\r\n    // }, []);\r\n\r\n    return {\r\n        username: user.name,\r\n        isAuthenticated: !!user.name,\r\n    };\r\n}\r\n\r\n// --- LOCAL STORAGE UTILITY ---\r\nconst getPlayedHistory = () => {\r\n    try {\r\n        const history = localStorage.getItem(HISTORY_KEY);\r\n        return history ? Array.from(new Set(JSON.parse(history))) : [];\r\n    } catch (e) {\r\n        return [];\r\n    }\r\n};\r\n\r\n// --- SongRow Component ---\r\nconst SongRow = React.memo(({ title, songs, activeSong, isPlaying, playSong, categoryId }) => {\r\n    if (!songs || songs.length === 0) return null;\r\n    const infiniteSongs = [...songs, ...songs];\r\n\r\n    return (\r\n        <section className=\"song-section\">\r\n            <h2 className=\"section-title\" id={`title-${categoryId}`}>{title}</h2>\r\n            <div className={`song-row-container ${categoryId}-scroll-area`}>\r\n                <div className=\"song-row-content\">\r\n                    {infiniteSongs.map((song, index) => (\r\n                        <div\r\n                            key={`${song.id}-${index}`}\r\n                            className={`song-card ${activeSong?.id === song.id && isPlaying ? 'is-playing' : ''}`}\r\n                            onClick={() => playSong(song)}\r\n                        >\r\n                            <img\r\n                                src={song.cover}\r\n                                alt={song.songname}\r\n                                className=\"cover\"\r\n                                onError={(e) => { e.target.onerror = null; e.target.src=\"https://placehold.co/200x200/404040/ffffff?text=No+Cover\"; }}\r\n                            />\r\n                            <h4>{song.songname}</h4>\r\n                            <p>{song.artist.split(',')[0]}</p>\r\n                            {song.movieName && <p className=\"song-detail\">Movie: {song.movieName}</p>}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n});\r\n\r\nexport default function Home() {\r\n    const [allSongs, setAllSongs] = useState([]);\r\n    const { activeSong, isPlaying, playSong } = useMusicPlayer();\r\n    \r\n    // --- USING AUTH HOOK FOR USERNAME and AUTH STATE ---\r\n    const { username, isAuthenticated } = useAuth(); \r\n    \r\n    // Fetch All Songs\r\n    useEffect(() => {\r\n        fetch(\"/songs.json\")\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setAllSongs(data);\r\n          })\r\n          .catch((err) => console.error(\"Error fetching songs:\", err));\r\n    }, []);\r\n\r\n    // --- Song Filtering Logic (Unchanged) ---\r\n    const recentlyPlayed = useMemo(() => {\r\n        const historyIds = getPlayedHistory();\r\n        const songs = historyIds.map(id => allSongs.find(s => s.id === id)).filter(s => s !== undefined);\r\n        return songs.slice(0, SONGS_PER_ROW);\r\n    }, [allSongs]);\r\n\r\n    const trendingSongs = useMemo(() => {\r\n        return allSongs\r\n            .filter(song =>\r\n                Array.isArray(song.songvariety) &&\r\n                song.songvariety.some(v => v.toLowerCase() === \"trending\")\r\n            )\r\n            .slice(0, SONGS_PER_ROW);\r\n    }, [allSongs]);\r\n\r\n    const tamilSongs = useMemo(() => {\r\n        return allSongs.filter(song => song.language && song.language.toLowerCase().includes('tamil')).slice(0, SONGS_PER_ROW);\r\n    }, [allSongs]);\r\n\r\n    const englishSongs = useMemo(() => {\r\n        return allSongs.filter(song => song.language && song.language.toLowerCase().includes('english')).slice(0, SONGS_PER_ROW);\r\n    }, [allSongs]);\r\n    \r\n    const hindiSongs = useMemo(() => {\r\n        return allSongs.filter(song => song.language && song.language.toLowerCase().includes('hindi')).slice(0, SONGS_PER_ROW);\r\n    }, [allSongs]);\r\n\r\n    const isLoading = allSongs.length === 0;\r\n\r\n    // --- Personalized Welcome Message JSX (CONDITIONAL LOGIC ADDED) ---\r\n    const welcomeMessage = (\r\n        <h1 className=\"main-welcome navbar-font\">\r\n            <span className=\"welcome-text\">Welcome to </span>\r\n            <span className=\"username-text\">\r\n                <span className=\"name-color\">\r\n                    {/* Conditionally render \"[Username]'s\" or \"My\" */}\r\n                    {isAuthenticated ? `${username}'s` : 'My'}\r\n                </span>\r\n                <span className=\"heaven-color\"> Music  </span>\r\n            </span>\r\n        </h1>\r\n    );\r\n\r\n    return (\r\n        <div className=\"home-dashboard\">\r\n            \r\n            {/* RENDER THE PERSONALIZED MESSAGE */}\r\n            {welcomeMessage}\r\n            \r\n            {isLoading ? (\r\n                <p className=\"loading-message\">Loading your music library...</p>\r\n            ) : (\r\n                <>\r\n                    <SongRow title=\"Your Recently Played\" songs={recentlyPlayed} categoryId=\"recent\" activeSong={activeSong} isPlaying={isPlaying} playSong={playSong} />\r\n                    <SongRow title=\"Global Trending Hits\" songs={trendingSongs} categoryId=\"trending\" activeSong={activeSong} isPlaying={isPlaying} playSong={playSong} />\r\n                    <SongRow title=\"Top Tamil Melodies\" songs={tamilSongs} categoryId=\"tamil\" activeSong={activeSong} isPlaying={isPlaying} playSong={playSong} />\r\n                    <SongRow title=\"International English Favorites\" songs={englishSongs} categoryId=\"english\" activeSong={activeSong} isPlaying={isPlaying} playSong={playSong} />\r\n                    <SongRow title=\"Best of Hindi Cinema\" songs={hindiSongs} categoryId=\"hindi\" activeSong={activeSong} isPlaying={isPlaying} playSong={playSong} />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}