{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\components\\\\SongCard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport \"./SongCard.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SongCard() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    fetch(\"/songs.json\").then(res => res.json()).then(data => {\n      const sortedSongs = data.sort((a, b) => a.id - b.id);\n      setSongs(sortedSongs);\n    }).catch(err => console.error(\"Error fetching songs:\", err));\n  }, []);\n  const playSong = song => {\n    if ((currentSong === null || currentSong === void 0 ? void 0 : currentSong.id) === song.id) {\n      if (isPlaying) {\n        audioRef.current.pause();\n        setIsPlaying(false);\n      } else {\n        audioRef.current.play();\n        setIsPlaying(true);\n      }\n    } else {\n      setCurrentSong(song);\n      setTimeout(() => {\n        if (audioRef.current) {\n          audioRef.current.play();\n          setIsPlaying(true);\n        }\n      }, 100);\n    }\n  };\n  const playNext = () => {\n    if (!currentSong) return;\n    const currentIndex = songs.findIndex(s => s.id === currentSong.id);\n    const nextIndex = (currentIndex + 1) % songs.length;\n    setCurrentSong(songs[nextIndex]);\n    setTimeout(() => {\n      audioRef.current.play();\n      setIsPlaying(true);\n    }, 100);\n  };\n  const playPrev = () => {\n    if (!currentSong) return;\n    const currentIndex = songs.findIndex(s => s.id === currentSong.id);\n    const prevIndex = (currentIndex - 1 + songs.length) % songs.length;\n    setCurrentSong(songs[prevIndex]);\n    setTimeout(() => {\n      audioRef.current.play();\n      setIsPlaying(true);\n    }, 100);\n  };\n  const formatTime = time => {\n    if (!time || isNaN(time)) return \"0:00\";\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60).toString().padStart(2, \"0\");\n    return `${minutes}:${seconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.cover,\n          alt: song.songname,\n          className: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: song.songname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: playPrev,\n            children: \"\\u23EE\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => playSong(song),\n            children: (currentSong === null || currentSong === void 0 ? void 0 : currentSong.id) === song.id && isPlaying ? \"⏸️\" : \"▶️\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: playNext,\n            children: \"\\u23ED\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: (currentSong === null || currentSong === void 0 ? void 0 : currentSong.id) === song.id ? audioRef : null,\n          src: song.url,\n          onTimeUpdate: () => {\n            if ((currentSong === null || currentSong === void 0 ? void 0 : currentSong.id) === song.id) {\n              setCurrentTime(audioRef.current.currentTime);\n            }\n          },\n          onLoadedMetadata: () => {\n            if ((currentSong === null || currentSong === void 0 ? void 0 : currentSong.id) === song.id) {\n              setDuration(audioRef.current.duration);\n            }\n          },\n          onEnded: playNext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentSong.cover,\n        alt: currentSong.songname,\n        className: \"player-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: currentSong.songname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentSong.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playPrev,\n          children: \"\\u23EE\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (isPlaying) {\n              audioRef.current.pause();\n              setIsPlaying(false);\n            } else {\n              audioRef.current.play();\n              setIsPlaying(true);\n            }\n          },\n          children: isPlaying ? \"⏸️\" : \"▶️\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playNext,\n          children: \"\\u23ED\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-time\",\n          children: formatTime(currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          className: \"progress-bar\",\n          min: \"0\",\n          max: duration || 0,\n          value: currentTime,\n          onChange: e => {\n            audioRef.current.currentTime = e.target.value;\n            setCurrentTime(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-time\",\n          children: formatTime(duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(SongCard, \"mWtQB8wlj6G/9Y4ZkZtA39w9kjc=\");\n_c = SongCard;\nvar _c;\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"names":["useEffect","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","SongCard","_s","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","audioRef","fetch","then","res","json","data","sortedSongs","sort","a","b","id","catch","err","console","error","playSong","song","current","pause","play","setTimeout","playNext","currentIndex","findIndex","s","nextIndex","length","playPrev","prevIndex","formatTime","time","isNaN","minutes","Math","floor","seconds","toString","padStart","children","className","map","src","cover","alt","songname","fileName","_jsxFileName","lineNumber","columnNumber","artist","onClick","ref","url","onTimeUpdate","onLoadedMetadata","onEnded","type","min","max","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/components/SongCard.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport \"./SongCard.css\";\r\n\r\nexport default function SongCard() {\r\n  const [songs, setSongs] = useState([]);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const audioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/songs.json\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const sortedSongs = data.sort((a, b) => a.id - b.id);\r\n        setSongs(sortedSongs);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching songs:\", err));\r\n  }, []);\r\n\r\n  const playSong = (song) => {\r\n    if (currentSong?.id === song.id) {\r\n      if (isPlaying) {\r\n        audioRef.current.pause();\r\n        setIsPlaying(false);\r\n      } else {\r\n        audioRef.current.play();\r\n        setIsPlaying(true);\r\n      }\r\n    } else {\r\n      setCurrentSong(song);\r\n      setTimeout(() => {\r\n        if (audioRef.current) {\r\n          audioRef.current.play();\r\n          setIsPlaying(true);\r\n        }\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  const playNext = () => {\r\n    if (!currentSong) return;\r\n    const currentIndex = songs.findIndex((s) => s.id === currentSong.id);\r\n    const nextIndex = (currentIndex + 1) % songs.length;\r\n    setCurrentSong(songs[nextIndex]);\r\n    setTimeout(() => {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n    }, 100);\r\n  };\r\n\r\n  const playPrev = () => {\r\n    if (!currentSong) return;\r\n    const currentIndex = songs.findIndex((s) => s.id === currentSong.id);\r\n    const prevIndex = (currentIndex - 1 + songs.length) % songs.length;\r\n    setCurrentSong(songs[prevIndex]);\r\n    setTimeout(() => {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n    }, 100);\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    if (!time || isNaN(time)) return \"0:00\";\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60).toString().padStart(2, \"0\");\r\n    return `${minutes}:${seconds}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* SONG LIST */}\r\n      <div className=\"song-list\">\r\n        {songs.map((song) => (\r\n          <div key={song.id} className=\"song-card\">\r\n            <img src={song.cover} alt={song.songname} className=\"cover\" />\r\n            <h4>{song.songname}</h4>\r\n            <p>{song.artist}</p>\r\n\r\n            {/* AUDIO CONTROLS ABOVE AUDIO */}\r\n            <div className=\"audio-controls\">\r\n              <button onClick={playPrev}>⏮️</button>\r\n              <button onClick={() => playSong(song)}>\r\n                {currentSong?.id === song.id && isPlaying ? \"⏸️\" : \"▶️\"}\r\n              </button>\r\n              <button onClick={playNext}>⏭️</button>\r\n            </div>\r\n\r\n            <audio\r\n              ref={currentSong?.id === song.id ? audioRef : null}\r\n              src={song.url}\r\n              onTimeUpdate={() => {\r\n                if (currentSong?.id === song.id) {\r\n                  setCurrentTime(audioRef.current.currentTime);\r\n                }\r\n              }}\r\n              onLoadedMetadata={() => {\r\n                if (currentSong?.id === song.id) {\r\n                  setDuration(audioRef.current.duration);\r\n                }\r\n              }}\r\n              onEnded={playNext}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* FOOTER PLAYER */}\r\n      {currentSong && (\r\n        <div className=\"player-footer\">\r\n          <img\r\n            src={currentSong.cover}\r\n            alt={currentSong.songname}\r\n            className=\"player-cover\"\r\n          />\r\n          <div className=\"player-info\">\r\n            <h4>{currentSong.songname}</h4>\r\n            <p>{currentSong.artist}</p>\r\n          </div>\r\n\r\n          {/* Footer Controls */}\r\n          <div className=\"player-controls\">\r\n            <button onClick={playPrev}>⏮️</button>\r\n            <button\r\n              onClick={() => {\r\n                if (isPlaying) {\r\n                  audioRef.current.pause();\r\n                  setIsPlaying(false);\r\n                } else {\r\n                  audioRef.current.play();\r\n                  setIsPlaying(true);\r\n                }\r\n              }}\r\n            >\r\n              {isPlaying ? \"⏸️\" : \"▶️\"}\r\n            </button>\r\n            <button onClick={playNext}>⏭️</button>\r\n          </div>\r\n\r\n          {/* Progress Bar */}\r\n          <div className=\"progress-container\">\r\n            <span className=\"progress-time\">{formatTime(currentTime)}</span>\r\n            <input\r\n              type=\"range\"\r\n              className=\"progress-bar\"\r\n              min=\"0\"\r\n              max={duration || 0}\r\n              value={currentTime}\r\n              onChange={(e) => {\r\n                audioRef.current.currentTime = e.target.value;\r\n                setCurrentTime(e.target.value);\r\n              }}\r\n            />\r\n            <span className=\"progress-time\">{formatTime(duration)}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}