{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\components\\\\SongCard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SongCard({\n  song,\n  onAddToPlaylist\n}) {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  const togglePlay = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  // Optional: stop playing when song ends\n  const handleEnded = () => setIsPlaying(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song-card\",\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"1rem\",\n      borderRadius: \"10px\",\n      width: \"250px\",\n      margin: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.title,\n      style: {\n        width: \"100%\",\n        borderRadius: \"10px\",\n        marginBottom: \"0.5rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        margin: \"0.2rem 0\"\n      },\n      children: song.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"0.2rem 0\",\n        fontSize: \"0.9rem\",\n        color: \"#555\"\n      },\n      children: [song.artist, \" | \", song.language, \" | \", song.duration]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: song.url,\n      onEnded: handleEnded,\n      style: {\n        width: \"100%\",\n        marginBottom: \"0.5rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlay,\n        style: {\n          padding: \"0.3rem 0.8rem\"\n        },\n        children: isPlaying ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onAddToPlaylist(song),\n        style: {\n          padding: \"0.3rem 0.8rem\",\n          marginLeft: \"0.5rem\"\n        },\n        children: \"Add to Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(SongCard, \"sL4xjVLmTF7f1+jWdlUm6K/Qvq0=\");\n_c = SongCard;\nvar _c;\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","SongCard","song","onAddToPlaylist","_s","isPlaying","setIsPlaying","audioRef","togglePlay","current","pause","play","handleEnded","className","style","border","padding","borderRadius","width","margin","children","src","cover","alt","title","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","artist","language","duration","ref","url","onEnded","onClick","marginLeft","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/components/SongCard.jsx"],"sourcesContent":["import { useState, useRef } from \"react\";\r\n\r\nexport default function SongCard({ song, onAddToPlaylist }) {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const audioRef = useRef(null);\r\n\r\n  const togglePlay = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  // Optional: stop playing when song ends\r\n  const handleEnded = () => setIsPlaying(false);\r\n\r\n  return (\r\n    <div className=\"song-card\" style={{ border: \"1px solid #ccc\", padding: \"1rem\", borderRadius: \"10px\", width: \"250px\", margin: \"1rem\" }}>\r\n      <img\r\n        src={song.cover}\r\n        alt={song.title}\r\n        style={{ width: \"100%\", borderRadius: \"10px\", marginBottom: \"0.5rem\" }}\r\n      />\r\n      <h3 style={{ margin: \"0.2rem 0\" }}>{song.title}</h3>\r\n      <p style={{ margin: \"0.2rem 0\", fontSize: \"0.9rem\", color: \"#555\" }}>\r\n        {song.artist} | {song.language} | {song.duration}\r\n      </p>\r\n      <audio\r\n        ref={audioRef}\r\n        src={song.url}\r\n        onEnded={handleEnded}\r\n        style={{ width: \"100%\", marginBottom: \"0.5rem\" }}\r\n      />\r\n      <div>\r\n        <button onClick={togglePlay} style={{ padding: \"0.3rem 0.8rem\" }}>\r\n          {isPlaying ? \"Pause\" : \"Play\"}\r\n        </button>\r\n        <button\r\n          onClick={() => onAddToPlaylist(song)}\r\n          style={{ padding: \"0.3rem 0.8rem\", marginLeft: \"0.5rem\" }}\r\n        >\r\n          Add to Playlist\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}