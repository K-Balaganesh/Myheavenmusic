{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\components\\\\SongCard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport \"./SongCard.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SongCard() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    fetch(\"/songs.json\") // your JSON file in public folder\n    .then(res => res.json()).then(data => {\n      const sortedSongs = data.sort((a, b) => a.id - b.id);\n      setSongs(sortedSongs);\n    }).catch(err => console.error(\"Error fetching songs:\", err));\n  }, []);\n  const playSong = song => {\n    if ((currentSong === null || currentSong === void 0 ? void 0 : currentSong.id) === song.id) {\n      // Toggle play/pause if same song clicked\n      if (isPlaying) {\n        audioRef.current.pause();\n        setIsPlaying(false);\n      } else {\n        audioRef.current.play();\n        setIsPlaying(true);\n      }\n    } else {\n      setCurrentSong(song);\n      setTimeout(() => {\n        if (audioRef.current) {\n          audioRef.current.play();\n          setIsPlaying(true);\n        }\n      }, 100);\n    }\n  };\n  const playNext = () => {\n    if (!currentSong) return;\n    const currentIndex = songs.findIndex(s => s.id === currentSong.id);\n    const nextIndex = (currentIndex + 1) % songs.length;\n    setCurrentSong(songs[nextIndex]);\n    setTimeout(() => {\n      audioRef.current.play();\n      setIsPlaying(true);\n    }, 100);\n  };\n  const playPrev = () => {\n    if (!currentSong) return;\n    const currentIndex = songs.findIndex(s => s.id === currentSong.id);\n    const prevIndex = (currentIndex - 1 + songs.length) % songs.length;\n    setCurrentSong(songs[prevIndex]);\n    setTimeout(() => {\n      audioRef.current.play();\n      setIsPlaying(true);\n    }, 100);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-card\",\n        onClick: () => playSong(song),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.cover,\n          alt: song.songname,\n          className: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: song.songname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentSong.cover,\n        alt: currentSong.songname,\n        className: \"player-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: currentSong.songname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentSong.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playPrev,\n          children: \"\\u23EE\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (isPlaying) {\n              audioRef.current.pause();\n              setIsPlaying(false);\n            } else {\n              audioRef.current.play();\n              setIsPlaying(true);\n            }\n          },\n          children: isPlaying ? \"⏸️\" : \"▶️\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playNext,\n          children: \"\\u23ED\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: currentSong.url,\n        onEnded: playNext // auto play next when song ends\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(SongCard, \"9IbhFQ5KGGhq7lv0lPf/JyoWnH8=\");\n_c = SongCard;\nvar _c;\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"names":["useEffect","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","SongCard","_s","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","fetch","then","res","json","data","sortedSongs","sort","a","b","id","catch","err","console","error","playSong","song","current","pause","play","setTimeout","playNext","currentIndex","findIndex","s","nextIndex","length","playPrev","prevIndex","children","className","map","onClick","src","cover","alt","songname","fileName","_jsxFileName","lineNumber","columnNumber","artist","ref","url","onEnded","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/components/SongCard.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport \"./SongCard.css\";\r\n\r\nexport default function SongCard() {\r\n  const [songs, setSongs] = useState([]);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const audioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/songs.json\") // your JSON file in public folder\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const sortedSongs = data.sort((a, b) => a.id - b.id);\r\n        setSongs(sortedSongs);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching songs:\", err));\r\n  }, []);\r\n\r\n  const playSong = (song) => {\r\n    if (currentSong?.id === song.id) {\r\n      // Toggle play/pause if same song clicked\r\n      if (isPlaying) {\r\n        audioRef.current.pause();\r\n        setIsPlaying(false);\r\n      } else {\r\n        audioRef.current.play();\r\n        setIsPlaying(true);\r\n      }\r\n    } else {\r\n      setCurrentSong(song);\r\n      setTimeout(() => {\r\n        if (audioRef.current) {\r\n          audioRef.current.play();\r\n          setIsPlaying(true);\r\n        }\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  const playNext = () => {\r\n    if (!currentSong) return;\r\n    const currentIndex = songs.findIndex((s) => s.id === currentSong.id);\r\n    const nextIndex = (currentIndex + 1) % songs.length;\r\n    setCurrentSong(songs[nextIndex]);\r\n    setTimeout(() => {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n    }, 100);\r\n  };\r\n\r\n  const playPrev = () => {\r\n    if (!currentSong) return;\r\n    const currentIndex = songs.findIndex((s) => s.id === currentSong.id);\r\n    const prevIndex = (currentIndex - 1 + songs.length) % songs.length;\r\n    setCurrentSong(songs[prevIndex]);\r\n    setTimeout(() => {\r\n      audioRef.current.play();\r\n      setIsPlaying(true);\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Song list */}\r\n      <div className=\"song-list\">\r\n        {songs.map((song) => (\r\n          <div\r\n            key={song.id}\r\n            className=\"song-card\"\r\n            onClick={() => playSong(song)}\r\n          >\r\n            <img src={song.cover} alt={song.songname} className=\"cover\" />\r\n            <h4>{song.songname}</h4>\r\n            <p>{song.artist}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Footer Player */}\r\n      {currentSong && (\r\n        <div className=\"player-footer\">\r\n          <img\r\n            src={currentSong.cover}\r\n            alt={currentSong.songname}\r\n            className=\"player-cover\"\r\n          />\r\n          <div className=\"player-info\">\r\n            <h4>{currentSong.songname}</h4>\r\n            <p>{currentSong.artist}</p>\r\n          </div>\r\n          <div className=\"player-controls\">\r\n            <button onClick={playPrev}>⏮️</button>\r\n            <button\r\n              onClick={() => {\r\n                if (isPlaying) {\r\n                  audioRef.current.pause();\r\n                  setIsPlaying(false);\r\n                } else {\r\n                  audioRef.current.play();\r\n                  setIsPlaying(true);\r\n                }\r\n              }}\r\n            >\r\n              {isPlaying ? \"⏸️\" : \"▶️\"}\r\n            </button>\r\n            <button onClick={playNext}>⏭️</button>\r\n          </div>\r\n          <audio\r\n            ref={audioRef}\r\n            src={currentSong.url}\r\n            onEnded={playNext} // auto play next when song ends\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}