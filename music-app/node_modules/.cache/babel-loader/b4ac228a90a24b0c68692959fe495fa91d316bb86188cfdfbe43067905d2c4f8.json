{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\pages\\\\Categories.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Categories.css\";\nimport \"../components/Search.css\"; // Reuse input styling for the search input\n\n// A default cover image for categories that might not have enough songs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_COVER = \"https://placehold.co/100x100/303030/ffffff?text=Music\";\n\n// --- Configuration for all Category/Playlist Cards (Finalized with Emojis and IDs) ---\nconst CATEGORIES_CONFIG = [\n// Languages\n{\n  id: \"tamil\",\n  title: \"🇮🇳 Top Tamil Songs\",\n  filter: song => {\n    var _song$language;\n    return (_song$language = song.language) === null || _song$language === void 0 ? void 0 : _song$language.toLowerCase().includes('tamil');\n  }\n}, {\n  id: \"english\",\n  title: \"🌍 International English Hits\",\n  filter: song => {\n    var _song$language2;\n    return (_song$language2 = song.language) === null || _song$language2 === void 0 ? void 0 : _song$language2.toLowerCase().includes('english');\n  }\n}, {\n  id: \"hindi\",\n  title: \"🎼 Bollywood Hindi Hits\",\n  filter: song => {\n    var _song$language3;\n    return (_song$language3 = song.language) === null || _song$language3 === void 0 ? void 0 : _song$language3.toLowerCase().includes('hindi');\n  }\n},\n// Playlists/Moods/Genres\n{\n  id: \"trending\",\n  title: \"🔥 Trending Now Package\",\n  filter: song => {\n    var _song$songvariety;\n    return (_song$songvariety = song.songvariety) === null || _song$songvariety === void 0 ? void 0 : _song$songvariety.includes('trending');\n  }\n}, {\n  id: \"mass\",\n  title: \"💥 Mass/Kuthu Hits\",\n  filter: song => {\n    var _song$songvariety2;\n    return (_song$songvariety2 = song.songvariety) === null || _song$songvariety2 === void 0 ? void 0 : _song$songvariety2.includes('mass');\n  }\n}, {\n  id: \"love\",\n  title: \"💖 Pure Love Songs\",\n  filter: song => {\n    var _song$songvariety3, _song$songvariety4;\n    return ((_song$songvariety3 = song.songvariety) === null || _song$songvariety3 === void 0 ? void 0 : _song$songvariety3.includes('romantic')) || ((_song$songvariety4 = song.songvariety) === null || _song$songvariety4 === void 0 ? void 0 : _song$songvariety4.includes('love'));\n  }\n}, {\n  id: \"sad\",\n  title: \"😢 Sad/Melody\",\n  filter: song => {\n    var _song$songvariety5, _song$songvariety6;\n    return ((_song$songvariety5 = song.songvariety) === null || _song$songvariety5 === void 0 ? void 0 : _song$songvariety5.includes('sad')) || ((_song$songvariety6 = song.songvariety) === null || _song$songvariety6 === void 0 ? void 0 : _song$songvariety6.includes('melody'));\n  }\n}, {\n  id: \"feel-good\",\n  title: \"😊 Feel Good Hits\",\n  filter: song => {\n    var _song$genre;\n    return (_song$genre = song.genre) === null || _song$genre === void 0 ? void 0 : _song$genre.toLowerCase().includes('feel good');\n  }\n}, {\n  id: \"vibe\",\n  title: \"🧘 Vibe/Chill Songs\",\n  filter: song => {\n    var _song$songvariety7, _song$songvariety8;\n    return ((_song$songvariety7 = song.songvariety) === null || _song$songvariety7 === void 0 ? void 0 : _song$songvariety7.includes('vibe')) || ((_song$songvariety8 = song.songvariety) === null || _song$songvariety8 === void 0 ? void 0 : _song$songvariety8.includes('chill'));\n  }\n}, {\n  id: \"party\",\n  title: \"🥳 Party Starters\",\n  filter: song => {\n    var _song$songvariety9;\n    return (_song$songvariety9 = song.songvariety) === null || _song$songvariety9 === void 0 ? void 0 : _song$songvariety9.includes('party');\n  }\n}, {\n  id: \"dance\",\n  title: \"💃 Dance Floor Hits\",\n  filter: song => {\n    var _song$songvariety0;\n    return (_song$songvariety0 = song.songvariety) === null || _song$songvariety0 === void 0 ? void 0 : _song$songvariety0.includes('dance');\n  }\n},\n// Artist Playlists (FIXED: Added IDs and Titles)\n{\n  id: \"anirudh\",\n  title: \"🎤 Anirudh Ravichander Playlist\",\n  filter: song => {\n    var _song$artist;\n    return (_song$artist = song.artist) === null || _song$artist === void 0 ? void 0 : _song$artist.includes('Anirudh Ravichander');\n  }\n}, {\n  id: \"sidsriram\",\n  title: \"🎶 Sid Sriram Collection\",\n  filter: song => {\n    var _song$artist2;\n    return (_song$artist2 = song.artist) === null || _song$artist2 === void 0 ? void 0 : _song$artist2.includes('Sid Sriram');\n  }\n}, {\n  id: \"chitra\",\n  title: \"🎤 Chitra's Best Melodies\",\n  filter: song => {\n    var _song$artist3;\n    return (_song$artist3 = song.artist) === null || _song$artist3 === void 0 ? void 0 : _song$artist3.includes('Chitra');\n  }\n}, {\n  id: \"hiphop-tamizha\",\n  title: \"🎧 HipHop Tamizha Swag\",\n  filter: song => {\n    var _song$artist4;\n    return (_song$artist4 = song.artist) === null || _song$artist4 === void 0 ? void 0 : _song$artist4.includes('Hip Hop Tamizha');\n  }\n}, {\n  id: \"shreya-ghoshal\",\n  title: \"🌟 Shreya Ghoshal Hits\",\n  filter: song => {\n    var _song$artist5;\n    return (_song$artist5 = song.artist) === null || _song$artist5 === void 0 ? void 0 : _song$artist5.includes('Shreya Ghoshal');\n  }\n}, {\n  id: \"gvprakash\",\n  title: \"🎹 G. V. Prakash Kumar Songs\",\n  filter: song => {\n    var _song$artist6;\n    return (_song$artist6 = song.artist) === null || _song$artist6 === void 0 ? void 0 : _song$artist6.includes('G. V. Prakash Kumar');\n  }\n}, {\n  id: \"yuvan-raja\",\n  title: \"👑 Yuvan Shankar Raja Classics\",\n  filter: song => {\n    var _song$artist7;\n    return (_song$artist7 = song.artist) === null || _song$artist7 === void 0 ? void 0 : _song$artist7.includes('Yuvan Shankar Raja');\n  }\n},\n// Genre Playlists (FIXED: Added IDs and Titles)\n{\n  id: \"peppy\",\n  title: \"⚡ Peppy & Energetic\",\n  filter: song => {\n    var _song$genre2;\n    return (_song$genre2 = song.genre) === null || _song$genre2 === void 0 ? void 0 : _song$genre2.toLowerCase().includes('peppy');\n  }\n}, {\n  id: \"romantic\",\n  title: \"💖 Romantic Ballads\",\n  filter: song => {\n    var _song$genre3;\n    return (_song$genre3 = song.genre) === null || _song$genre3 === void 0 ? void 0 : _song$genre3.toLowerCase().includes('romantic');\n  }\n}, {\n  id: \"instrumental\",\n  title: \"🎻 Classical Instrumental\",\n  filter: song => {\n    var _song$genre4;\n    return (_song$genre4 = song.genre) === null || _song$genre4 === void 0 ? void 0 : _song$genre4.toLowerCase().includes('instrumental');\n  }\n}];\n\n// --- Category Card Component (UNCHANGED) ---\nconst CategoryCard = /*#__PURE__*/React.memo(_c = ({\n  category,\n  covers,\n  onSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-card\",\n    onClick: () => onSelect(category),\n    \"aria-label\": `View songs in ${category.title}`,\n    children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-images\",\n      children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", Array.from({\n        length: 4\n      }).map((_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: covers[i] || DEFAULT_COVER,\n        alt: `${category.title} album cover ${i + 1}`,\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = DEFAULT_COVER;\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n});\n_c2 = CategoryCard;\nexport default function Categories() {\n  _s();\n  const [allSongs, setAllSongs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const navigate = useNavigate();\n\n  // Fetch all songs once from /songs.json (Correct Implementation)\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"/songs.json\").then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      setAllSongs(data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching songs:\", err);\n      setIsLoading(false);\n    });\n  }, []);\n\n  // Prepare categories, filtering by search query first, then by song data\n  const categoriesWithCovers = useMemo(() => {\n    // 1. Filter the static config list based on search query\n    const lowerCaseQuery = searchQuery.toLowerCase();\n\n    // IMPORTANT: Filter out categories with empty IDs before proceeding.\n    const validCategories = CATEGORIES_CONFIG.filter(category => category.id && category.title);\n    const searchableCategories = validCategories.filter(category => category.title.toLowerCase().includes(lowerCaseQuery) || category.id.includes(lowerCaseQuery));\n    if (allSongs.length === 0) return searchableCategories.map(category => ({\n      ...category,\n      covers: [],\n      filteredSongs: [],\n      songCount: 0\n    }));\n\n    // 2. Then, map and filter songs for the covers and detail data\n    return searchableCategories.map(category => {\n      const filteredSongs = allSongs.filter(category.filter);\n      const covers = filteredSongs.slice(0, 4).map(song => song.cover).filter(cover => cover);\n      return {\n        ...category,\n        covers: covers,\n        filteredSongs: filteredSongs,\n        songCount: filteredSongs.length\n      };\n    });\n  }, [allSongs, searchQuery]);\n\n  // Handler for clicking a category card (UNCHANGED)\n  const handleCategoryClick = category => {\n    navigate(`/categories/${category.id}`, {\n      state: {\n        title: category.title,\n        songs: category.filteredSongs\n      }\n    });\n  };\n\n  // Determine content based on state\n  let content;\n\n  // Use a unified loading message style\n  const Message = ({\n    text\n  }) => /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"loading-message\",\n    style: {\n      color: '#999',\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 35\n  }, this);\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(Message, {\n      text: \"Loading categories...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }, this);\n  } else if (categoriesWithCovers.length === 0 && searchQuery) {\n    content = /*#__PURE__*/_jsxDEV(Message, {\n      text: `No categories found matching \"${searchQuery}\".`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }, this);\n  } else if (categoriesWithCovers.length === 0) {\n    content = /*#__PURE__*/_jsxDEV(Message, {\n      text: \"No categories found or defined.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }, this);\n  } else {\n    // Show the actual grid\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-grid\",\n      children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", categoriesWithCovers.map(category =>\n      /*#__PURE__*/\n      // Ensure a key is used (which requires a unique ID)\n      _jsxDEV(CategoryCard, {\n        category: category,\n        covers: category.covers,\n        onSelect: handleCategoryClick\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this)), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories-page\",\n    children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"categories-title\",\n      children: \"Browse All Categories & Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-container categories-search\",\n      children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search categories and playlists...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        className: \"search-input\",\n        \"aria-label\": \"Search categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", content, \"\\xA0 \\xA0 \\xA0 \\xA0 \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n_s(Categories, \"u8MI/xyEDV4HhmQGO93iEdGjFSo=\", false, function () {\n  return [useNavigate];\n});\n_c3 = Categories;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CategoryCard$React.memo\");\n$RefreshReg$(_c2, \"CategoryCard\");\n$RefreshReg$(_c3, \"Categories\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useNavigate","jsxDEV","_jsxDEV","DEFAULT_COVER","CATEGORIES_CONFIG","id","title","filter","song","_song$language","language","toLowerCase","includes","_song$language2","_song$language3","_song$songvariety","songvariety","_song$songvariety2","_song$songvariety3","_song$songvariety4","_song$songvariety5","_song$songvariety6","_song$genre","genre","_song$songvariety7","_song$songvariety8","_song$songvariety9","_song$songvariety0","_song$artist","artist","_song$artist2","_song$artist3","_song$artist4","_song$artist5","_song$artist6","_song$artist7","_song$genre2","_song$genre3","_song$genre4","CategoryCard","memo","_c","category","covers","onSelect","className","onClick","children","Array","from","length","map","_","i","src","alt","onError","e","target","onerror","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Categories","_s","allSongs","setAllSongs","isLoading","setIsLoading","searchQuery","setSearchQuery","navigate","fetch","then","res","ok","Error","status","json","data","catch","err","console","error","categoriesWithCovers","lowerCaseQuery","validCategories","searchableCategories","filteredSongs","songCount","slice","cover","handleCategoryClick","state","songs","content","Message","text","style","color","textAlign","marginTop","type","placeholder","value","onChange","_c3","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/pages/Categories.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; \r\nimport \"./Categories.css\"; \r\nimport \"../components/Search.css\"; // Reuse input styling for the search input\r\n\r\n// A default cover image for categories that might not have enough songs\r\nconst DEFAULT_COVER = \"https://placehold.co/100x100/303030/ffffff?text=Music\";\r\n\r\n// --- Configuration for all Category/Playlist Cards (Finalized with Emojis and IDs) ---\r\nconst CATEGORIES_CONFIG = [\r\n    // Languages\r\n    { id: \"tamil\", title: \"🇮🇳 Top Tamil Songs\", filter: (song) => song.language?.toLowerCase().includes('tamil') },\r\n    { id: \"english\", title: \"🌍 International English Hits\", filter: (song) => song.language?.toLowerCase().includes('english') },\r\n    { id: \"hindi\", title: \"🎼 Bollywood Hindi Hits\", filter: (song) => song.language?.toLowerCase().includes('hindi') },\r\n    \r\n    // Playlists/Moods/Genres\r\n    { id: \"trending\", title: \"🔥 Trending Now Package\", filter: (song) => song.songvariety?.includes('trending') },\r\n    { id: \"mass\", title: \"💥 Mass/Kuthu Hits\", filter: (song) => song.songvariety?.includes('mass') },\r\n    { id: \"love\", title: \"💖 Pure Love Songs\", filter: (song) => song.songvariety?.includes('romantic') || song.songvariety?.includes('love') },\r\n    { id: \"sad\", title: \"😢 Sad/Melody\", filter: (song) => song.songvariety?.includes('sad') || song.songvariety?.includes('melody') },\r\n    { id: \"feel-good\", title: \"😊 Feel Good Hits\", filter: (song) => song.genre?.toLowerCase().includes('feel good') }, \r\n    { id: \"vibe\", title: \"🧘 Vibe/Chill Songs\", filter: (song) => song.songvariety?.includes('vibe') || song.songvariety?.includes('chill') },\r\n    { id: \"party\", title: \"🥳 Party Starters\", filter: (song) => song.songvariety?.includes('party') },\r\n    { id: \"dance\", title: \"💃 Dance Floor Hits\", filter: (song) => song.songvariety?.includes('dance') },\r\n\r\n    // Artist Playlists (FIXED: Added IDs and Titles)\r\n    { id: \"anirudh\", title: \"🎤 Anirudh Ravichander Playlist\", filter: (song) => song.artist?.includes('Anirudh Ravichander') },\r\n   { id: \"sidsriram\", title: \"🎶 Sid Sriram Collection\", filter: (song) => song.artist?.includes('Sid Sriram') },\r\n   { id: \"chitra\", title: \"🎤 Chitra's Best Melodies\", filter: (song) => song.artist?.includes('Chitra') },\r\n   { id: \"hiphop-tamizha\", title: \"🎧 HipHop Tamizha Swag\", filter: (song) => song.artist?.includes('Hip Hop Tamizha') },\r\n   { id: \"shreya-ghoshal\", title: \"🌟 Shreya Ghoshal Hits\", filter: (song) => song.artist?.includes('Shreya Ghoshal') },\r\n   { id: \"gvprakash\", title: \"🎹 G. V. Prakash Kumar Songs\", filter: (song) => song.artist?.includes('G. V. Prakash Kumar') },\r\n   { id: \"yuvan-raja\", title: \"👑 Yuvan Shankar Raja Classics\", filter: (song) => song.artist?.includes('Yuvan Shankar Raja') },\r\n\r\n\r\n    // Genre Playlists (FIXED: Added IDs and Titles)\r\n    { id: \"peppy\", title: \"⚡ Peppy & Energetic\", filter: (song) => song.genre?.toLowerCase().includes('peppy') },\r\n    { id: \"romantic\", title: \"💖 Romantic Ballads\", filter: (song) => song.genre?.toLowerCase().includes('romantic') },\r\n    { id: \"instrumental\", title: \"🎻 Classical Instrumental\", filter: (song) => song.genre?.toLowerCase().includes('instrumental') },\r\n];\r\n\r\n// --- Category Card Component (UNCHANGED) ---\r\nconst CategoryCard = React.memo(({ category, covers, onSelect }) => {\r\n    return (\r\n        <div \r\n            className=\"category-card\" \r\n            onClick={() => onSelect(category)}\r\n            aria-label={`View songs in ${category.title}`}\r\n        >\r\n            <div className=\"category-images\">\r\n                {Array.from({ length: 4 }).map((_, i) => (\r\n                    <img \r\n                        key={i} \r\n                        src={covers[i] || DEFAULT_COVER} \r\n                        alt={`${category.title} album cover ${i + 1}`} \r\n                        onError={(e) => { e.target.onerror = null; e.target.src = DEFAULT_COVER; }}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <h3>{category.title}</h3>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nexport default function Categories() {\r\n    const [allSongs, setAllSongs] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [searchQuery, setSearchQuery] = useState(''); \r\n    const navigate = useNavigate(); \r\n\r\n    // Fetch all songs once from /songs.json (Correct Implementation)\r\n    useEffect(() => { \r\n        setIsLoading(true);\r\n        fetch(\"/songs.json\") \r\n          .then((res) => {\r\n                if (!res.ok) {\r\n                    throw new Error(`HTTP error! status: ${res.status}`);\r\n                }\r\n                return res.json();\r\n            }) \r\n            .then((data) => { \r\n                setAllSongs(data); \r\n                setIsLoading(false);\r\n            }) \r\n            .catch((err) => {\r\n                console.error(\"Error fetching songs:\", err);\r\n                setIsLoading(false);\r\n            }); \r\n    }, []); \r\n\r\n    // Prepare categories, filtering by search query first, then by song data\r\n    const categoriesWithCovers = useMemo(() => {\r\n        // 1. Filter the static config list based on search query\r\n        const lowerCaseQuery = searchQuery.toLowerCase();\r\n\r\n        // IMPORTANT: Filter out categories with empty IDs before proceeding.\r\n        const validCategories = CATEGORIES_CONFIG.filter(category => category.id && category.title);\r\n\r\n        const searchableCategories = validCategories.filter(category => \r\n            category.title.toLowerCase().includes(lowerCaseQuery) ||\r\n            category.id.includes(lowerCaseQuery) \r\n        );\r\n\r\n        if (allSongs.length === 0) return searchableCategories.map(category => ({\r\n            ...category,\r\n            covers: [],\r\n            filteredSongs: [],\r\n            songCount: 0\r\n        }));\r\n\r\n\r\n        // 2. Then, map and filter songs for the covers and detail data\r\n        return searchableCategories.map(category => {\r\n            const filteredSongs = allSongs.filter(category.filter);\r\n            const covers = filteredSongs\r\n                .slice(0, 4)\r\n                .map(song => song.cover)\r\n                .filter(cover => cover); \r\n\r\n            return {\r\n                ...category,\r\n                covers: covers,\r\n                filteredSongs: filteredSongs, \r\n                songCount: filteredSongs.length\r\n            };\r\n        });\r\n    }, [allSongs, searchQuery]); \r\n\r\n    // Handler for clicking a category card (UNCHANGED)\r\n    const handleCategoryClick = (category) => {\r\n        navigate(`/categories/${category.id}`, { \r\n            state: { \r\n                title: category.title,\r\n                songs: category.filteredSongs \r\n            } \r\n        });\r\n    };\r\n    \r\n    // Determine content based on state\r\n    let content;\r\n\r\n    // Use a unified loading message style\r\n    const Message = ({ text }) => <p className=\"loading-message\" style={{color: '#999', textAlign: 'center', marginTop: '50px'}}>{text}</p>;\r\n\r\n    if (isLoading) {\r\n        content = <Message text=\"Loading categories...\" />;\r\n    } else if (categoriesWithCovers.length === 0 && searchQuery) {\r\n        content = <Message text={`No categories found matching \"${searchQuery}\".`} />;\r\n    } else if (categoriesWithCovers.length === 0) {\r\n        content = <Message text=\"No categories found or defined.\" />;\r\n    } else {\r\n        // Show the actual grid\r\n        content = (\r\n            <div className=\"category-grid\">\r\n                {categoriesWithCovers.map((category) => (\r\n                    // Ensure a key is used (which requires a unique ID)\r\n                    <CategoryCard \r\n                        key={category.id} \r\n                        category={category}\r\n                        covers={category.covers}\r\n                        onSelect={handleCategoryClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"categories-page\">\r\n            <h2 className=\"categories-title\">Browse All Categories & Playlists</h2>\r\n            \r\n            {/* Search Bar */}\r\n            <div className=\"search-bar-container categories-search\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search categories and playlists...\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    className=\"search-input\"\r\n                    aria-label=\"Search categories\"\r\n                />\r\n            </div>\r\n            \r\n            {content}\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}