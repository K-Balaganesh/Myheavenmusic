{"ast":null,"code":"var _jsxFileName = \"D:\\\\5th sem\\\\React projects\\\\Reactcodegpt\\\\music-app\\\\src\\\\components\\\\SongCard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport \"./SongCard.css\";\n\n// Helper function to format seconds into MM:SS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatTime = seconds => {\n  if (isNaN(seconds) || seconds < 0) return \"0:00\";\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n};\nexport default function SongList() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [activeSong, setActiveSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n\n  // Ref for the single, main audio element in the footer\n  const audioRef = useRef(null);\n  useEffect(() => {\n    fetch(\"/songs.json\").then(res => res.json()).then(data => {\n      const sortedSongs = data.sort((a, b) => a.id - b.id);\n      setSongs(sortedSongs);\n    }).catch(err => console.error(\"Error fetching songs:\", err));\n  }, []);\n\n  // --- Audio Event Handlers ---\n\n  const handleLoadedMetadata = useCallback(() => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  }, []);\n  const handleTimeUpdate = useCallback(() => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  }, []);\n  const handleSongEnded = useCallback(() => {\n    setIsPlaying(false);\n    // You could add logic here for 'next song'\n  }, []);\n\n  // Attach/Detach event listeners\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('ended', handleSongEnded);\n    return () => {\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('ended', handleSongEnded);\n    };\n  }, [handleLoadedMetadata, handleTimeUpdate, handleSongEnded, activeSong]);\n\n  // --- Playback Controls ---\n\n  const playSong = song => {\n    // If a different song is clicked, update activeSong and ensure it plays\n    if ((activeSong === null || activeSong === void 0 ? void 0 : activeSong.id) !== song.id) {\n      setActiveSong(song);\n      setIsPlaying(true);\n      // The useEffect with key={activeSong.id} handles auto-play on source change\n    } else {\n      // If the same song is clicked, toggle play/pause\n      togglePlayPause();\n    }\n  };\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play().catch(e => console.error(\"Play failed:\", e)); // Handle potential auto-play block\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleSeek = e => {\n    const audio = audioRef.current;\n    if (audio) {\n      const newTime = e.target.value;\n      audio.currentTime = newTime;\n      setCurrentTime(newTime);\n    }\n  };\n\n  // Handles auto-play after song load/change\n  useEffect(() => {\n    if (activeSong && audioRef.current) {\n      // Explicitly try to play when activeSong changes (new source is loaded)\n      if (isPlaying) {\n        audioRef.current.play().catch(e => {\n          console.warn(\"Autoplay was prevented. User needs to interact.\");\n          // Optionally, set isPlaying to false if play fails to update UI\n          setIsPlaying(false);\n        });\n      }\n    }\n  }, [activeSong]);\n\n  // Placeholder for Next/Prev functionality (requires index tracking)\n  const skipTrack = direction => {\n    if (!activeSong || songs.length === 0) return;\n    const currentIndex = songs.findIndex(s => s.id === activeSong.id);\n    let newIndex = currentIndex + direction;\n    if (newIndex < 0) {\n      newIndex = songs.length - 1; // Loop to last song\n    } else if (newIndex >= songs.length) {\n      newIndex = 0; // Loop to first song\n    }\n    const nextSong = songs[newIndex];\n    if (nextSong) {\n      setActiveSong(nextSong);\n      setIsPlaying(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-card\",\n        onClick: () => playSong(song),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.cover,\n          alt: song.songname,\n          className: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: song.songname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.artist.split(',')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-play-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              playSong(song);\n            },\n            children: (activeSong === null || activeSong === void 0 ? void 0 : activeSong.id) === song.id && isPlaying ? '❚❚' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), activeSong && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        // Forces re-render and reload of new source\n        src: activeSong.url,\n        preload: \"auto\"\n      }, activeSong.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-info player-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: activeSong.cover,\n          alt: activeSong.songname,\n          className: \"player-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: activeSong.songname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: activeSong.artist.split(',')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => skipTrack(-1),\n            children: \"<<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePlayPause,\n            children: isPlaying ? '❚❚' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => skipTrack(1),\n            children: \">>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-time\",\n          children: formatTime(currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: duration || 0,\n          value: currentTime,\n          className: \"progress-bar\",\n          onChange: handleSeek\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-time\",\n          children: formatTime(duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-volume-up\",\n          style: {\n            color: '#fff'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(SongList, \"O1PIFY700G53Th2AshGWF0bIK0U=\");\n_c = SongList;\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["useEffect","useState","useRef","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","formatTime","seconds","isNaN","minutes","Math","floor","remainingSeconds","toString","padStart","SongList","_s","songs","setSongs","activeSong","setActiveSong","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","audioRef","fetch","then","res","json","data","sortedSongs","sort","a","b","id","catch","err","console","error","handleLoadedMetadata","current","handleTimeUpdate","handleSongEnded","audio","addEventListener","removeEventListener","playSong","song","togglePlayPause","pause","play","e","handleSeek","newTime","target","value","warn","skipTrack","direction","length","currentIndex","findIndex","s","newIndex","nextSong","children","className","map","onClick","src","cover","alt","songname","fileName","_jsxFileName","lineNumber","columnNumber","artist","split","stopPropagation","ref","url","preload","type","min","max","onChange","style","flex","textAlign","color","_c","$RefreshReg$"],"sources":["D:/5th sem/React projects/Reactcodegpt/music-app/src/components/SongCard.jsx"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport \"./SongCard.css\";\r\n\r\n// Helper function to format seconds into MM:SS\r\nconst formatTime = (seconds) => {\r\n  if (isNaN(seconds) || seconds < 0) return \"0:00\";\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = Math.floor(seconds % 60);\r\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n};\r\n\r\nexport default function SongList() {\r\n  const [songs, setSongs] = useState([]);\r\n  const [activeSong, setActiveSong] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n\r\n  // Ref for the single, main audio element in the footer\r\n  const audioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/songs.json\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const sortedSongs = data.sort((a, b) => a.id - b.id);\r\n        setSongs(sortedSongs);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching songs:\", err));\r\n  }, []);\r\n\r\n  // --- Audio Event Handlers ---\r\n\r\n  const handleLoadedMetadata = useCallback(() => {\r\n    if (audioRef.current) {\r\n      setDuration(audioRef.current.duration);\r\n    }\r\n  }, []);\r\n\r\n  const handleTimeUpdate = useCallback(() => {\r\n    if (audioRef.current) {\r\n      setCurrentTime(audioRef.current.currentTime);\r\n    }\r\n  }, []);\r\n\r\n  const handleSongEnded = useCallback(() => {\r\n    setIsPlaying(false);\r\n    // You could add logic here for 'next song'\r\n  }, []);\r\n  \r\n  // Attach/Detach event listeners\r\n  useEffect(() => {\r\n    const audio = audioRef.current;\r\n    if (!audio) return;\r\n\r\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\r\n    audio.addEventListener('timeupdate', handleTimeUpdate);\r\n    audio.addEventListener('ended', handleSongEnded);\r\n\r\n    return () => {\r\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\r\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\r\n      audio.removeEventListener('ended', handleSongEnded);\r\n    };\r\n  }, [handleLoadedMetadata, handleTimeUpdate, handleSongEnded, activeSong]);\r\n\r\n\r\n  // --- Playback Controls ---\r\n\r\n  const playSong = (song) => {\r\n    // If a different song is clicked, update activeSong and ensure it plays\r\n    if (activeSong?.id !== song.id) {\r\n      setActiveSong(song);\r\n      setIsPlaying(true);\r\n      // The useEffect with key={activeSong.id} handles auto-play on source change\r\n    } else {\r\n      // If the same song is clicked, toggle play/pause\r\n      togglePlayPause();\r\n    }\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    const audio = audioRef.current;\r\n    if (!audio) return;\r\n\r\n    if (isPlaying) {\r\n      audio.pause();\r\n    } else {\r\n      audio.play().catch(e => console.error(\"Play failed:\", e)); // Handle potential auto-play block\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const handleSeek = (e) => {\r\n    const audio = audioRef.current;\r\n    if (audio) {\r\n      const newTime = e.target.value;\r\n      audio.currentTime = newTime;\r\n      setCurrentTime(newTime);\r\n    }\r\n  };\r\n  \r\n  // Handles auto-play after song load/change\r\n  useEffect(() => {\r\n      if (activeSong && audioRef.current) {\r\n          // Explicitly try to play when activeSong changes (new source is loaded)\r\n          if (isPlaying) {\r\n              audioRef.current.play().catch(e => {\r\n                  console.warn(\"Autoplay was prevented. User needs to interact.\");\r\n                  // Optionally, set isPlaying to false if play fails to update UI\r\n                  setIsPlaying(false); \r\n              });\r\n          }\r\n      }\r\n  }, [activeSong]);\r\n\r\n\r\n  // Placeholder for Next/Prev functionality (requires index tracking)\r\n  const skipTrack = (direction) => {\r\n    if (!activeSong || songs.length === 0) return;\r\n    \r\n    const currentIndex = songs.findIndex(s => s.id === activeSong.id);\r\n    let newIndex = currentIndex + direction;\r\n\r\n    if (newIndex < 0) {\r\n      newIndex = songs.length - 1; // Loop to last song\r\n    } else if (newIndex >= songs.length) {\r\n      newIndex = 0; // Loop to first song\r\n    }\r\n\r\n    const nextSong = songs[newIndex];\r\n    if (nextSong) {\r\n      setActiveSong(nextSong);\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"song-list\">\r\n        {songs.map((song) => (\r\n          <div \r\n            key={song.id} \r\n            className=\"song-card\"\r\n            onClick={() => playSong(song)}\r\n          >\r\n            <img src={song.cover} alt={song.songname} className=\"cover\" />\r\n            <h4>{song.songname}</h4>\r\n            <p>{song.artist.split(',')[0]}</p>\r\n            {/* Custom Play Button (instead of redundant audio tag) */}\r\n            <div className=\"custom-play-button\">\r\n                <button onClick={(e) => { e.stopPropagation(); playSong(song); }}>\r\n                    {activeSong?.id === song.id && isPlaying ? '❚❚' : '▶'}\r\n                </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* --- Full Player Fixed Footer (when a song is active) --- */}\r\n      {activeSong && (\r\n        <div className=\"player-footer\">\r\n          {/* Audio element for playback */}\r\n          <audio \r\n            ref={audioRef}\r\n            key={activeSong.id} // Forces re-render and reload of new source\r\n            src={activeSong.url}\r\n            preload=\"auto\"\r\n          />\r\n          \r\n          {/* Song Info */}\r\n          <div className=\"song-info player-info\">\r\n            <img \r\n              src={activeSong.cover} \r\n              alt={activeSong.songname} \r\n              className=\"player-cover\" \r\n            />\r\n            <div>\r\n              <h4>{activeSong.songname}</h4>\r\n              <p>{activeSong.artist.split(',')[0]}</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Controls and Progress */}\r\n          <div className=\"progress-container\">\r\n            {/* Custom Controls */}\r\n            <div className=\"player-controls\">\r\n                <button onClick={() => skipTrack(-1)}>&lt;&lt;</button>\r\n                <button onClick={togglePlayPause}>\r\n                    {isPlaying ? '❚❚' : '▶'}\r\n                </button>\r\n                <button onClick={() => skipTrack(1)}>&gt;&gt;</button>\r\n            </div>\r\n\r\n            {/* Time and Seek Bar */}\r\n            <span className=\"progress-time\">{formatTime(currentTime)}</span>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max={duration || 0}\r\n              value={currentTime}\r\n              className=\"progress-bar\"\r\n              onChange={handleSeek}\r\n            />\r\n            <span className=\"progress-time\">{formatTime(duration)}</span>\r\n          </div>\r\n\r\n          {/* Volume and Other Options (Placeholder) */}\r\n          <div style={{ flex: 1, textAlign: 'right' }}>\r\n            {/* E.g., Volume slider or other icons */}\r\n            <i className=\"fa fa-volume-up\" style={{ color: '#fff' }}></i>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}